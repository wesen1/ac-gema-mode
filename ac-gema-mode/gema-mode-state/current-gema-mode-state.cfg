//
// @author wesen
// @copyright 2020 wesen <wesen-ac@web.de>
//

//
// Current gema mode state module for ac-gema-mode
//
// Provides functions to manage the current gema mode state.
//
// Requires:
//   * scripts/ac-gema-mode/gema-mode-state/environment-checker.cfg
//   * scripts/ac-gema-mode/utils/state-manager.cfg
//

persistidents 0;

initializeState "GemaMode" 0;


// Public Functions

//
// Returns the current gema mode state.
//
// @return int 1 if the gema mode is currently enabled, 0 otherwise
//
const getCurrentGemaModeState [
  return (getState "GemaMode");
]

//
// Sets the current gema mode state.
// The state is only changed if the new state differs from the current state.
// Also fires the "onGemaModeEnabled" and "onGemaModeDisabled" when the state changes accordingly.
//
// @param int newGemaModeState ($arg1) The state to which the gema mode state should be set (0 or 1)
//
// @return string The reason if the state was not changed to the new state or an empty string otherwise
//
// @example `setGemaModeState 1` Enables the gema mode if it is not already enabled
// @example `setGemaModeState 0` Disables the gema mode if it is not already disabled
//
const setCurrentGemaModeState [
  return (setState "GemaMode" $arg1);
]

//
// Returns the reason why the gema mode state can not be changed to a specified state.
//
// @param int newGemaModeState ($arg1) The state to which the gema mode state should be set (0 or 1)
//
// @return string The reason why the gema mode state can not be changed or an empty string if it can be changed
//
const getGemaModeStateCanNotBeChangedReason [

  if (= $arg1 1) [
    if (! (isGema)) [
      // The gema mode should be activated but the environment is not gema compatible
      return (getEnvironmentNotGemaCompatibleReason);
    ]
  ]

]


//
// Tries to set the current gema mode state.
// If the gema mode state was successfully changed an optional success message will be shown.
// Otherwise the reason for not changing the gema mode state will be shown.
//
// @param int newGemaModeState ($arg1) The new gema mode state
// @param string successNotification ($arg2) The notification to show on success (optional)
//
// @return int 1 if the gema mode state was successfully set, 0 otherwise
//
const tryToSetGemaModeState [

  if (= $numargs 2) [
    return (tryToSetState "GemaMode" $arg1 $arg2);
  ][
    return (tryToSetState "GemaMode" $arg1);
  ]

]


// Custom Events

//
// Event handler that is called when the gema mode state changes from "disabled" to "enabled".
//
checkinit onGemaModeEnabled [
]

//
// Event handler that is called when the gema mode state changes from "enabled" to "disabled".
//
checkinit onGemaModeDisabled [
]
