//
// @author wesen
// @copyright 2017-2020 wesen <wesen-ac@web.de>
//

//
// Time target module for ac-gema-mode
//
// Handles setting and getting of the current time target
//
// Requires
//   * scripts/ac-gema-mode/notification-printer.cfg
//   * scripts/ac-gema-mode/strings.cfg
//   * scripts/ac-gema-mode/time/time-interval-array.cfg
//

//
// The current time target
//
// @var array $timeTarget
//
checkinit timeTarget (createTimeIntervalArray 0);


persistidents 0;

// Public Functions

//
// Returns the time target.
//
// @return array The time target
//
const getTimeTarget [
  return $timeTarget;
]




//
// Returns the minutes part of the time target.
//
// @return int The minutes part of the time target
//
const timeTargetGetMinutes [
  return (getTimeIntervalMinutes $timeTarget);
]

//
// Changes the minutes part of the time target.
//
// @param int timeTargetMinutes ($arg1) The minutes part of the time target (Must be between 0 and 35791)
//
// @example `timeTargetSetMinutes 5` Sets the minutes part of the time target to 5
//
const timeTargetSetMinutes [
  changeTimeTarget (changeTimeIntervalMinutes $timeTarget $arg1);
]

//
// Returns the seconds part of the time target.
//
// @return int The seconds part of the time target
//
const timeTargetGetSeconds [
  return (getTimeIntervalSeconds $timeTarget);
]

//
// Changes the seconds part of the time target.
//
// @param int timeTargetSeconds ($arg1) The seconds part of the time target (Must be between 0 and 59)
//
// @example `timeTargetSetSeconds 47` Sets the seconds part of the time target to 47
//
const timeTargetSetSeconds [
  changeTimeTarget (changeTimeIntervalSeconds $timeTarget $arg1);
]

//
// Returns the milliseconds part of the time target.
//
// @return int The milliseconds part of the time target
//
const timeTargetGetMilliseconds [
  return (getTimeIntervalMilliseconds $timeTarget);
]

//
// Changes the milliseconds part of the time target.
//
// @param int timeTargetMilliseconds ($arg1) The milliseconds part of the time target (Must be between 0 and 999)
//
const timeTargetSetMilliseconds [
  changeTimeTarget (changeTimeIntervalMilliseconds $timeTarget $arg1);
]


//
// Returns the total milliseconds of the time target.
//
// @return int The total milliseconds of the time target
//
const getTimeTargetTotalMilliseconds [
  return (getTimeIntervalTotalMilliseconds $timeTarget);
]

//
// Sets the time target.
//
// @param int timeTarget ($arg1) The time target in milliseconds (Must be between 0 and 2147483647)
//
// @example `setTimeTarget 10000` Sets the time target to 10000 milliseconds (= 10 seconds)
//
const setTimeTarget [
  changeTimeTarget (createTimeIntervalArray $arg1);
]


// Custom Events

//
// Event handler that is called when the time target is changed with 'setTimeTarget'.
//
checkinit onTimeTargetChange [
]


// Private Functions

//
// Changes the time target to a specified time interval.
// Also fires the "onTimeTargetChange" event when the time target is changed.
//
// @param array timeIntervalArray ($arg1) The time interval array to set the time target to
//
const changeTimeTarget [

  newTimeTarget = $arg1;
  if (strcmp $newTimeTarget "") [
    printGemaNotification (format $messageTimeTargetCanNotBeSet (getLastTimeIntervalChangeErrorMessage));
  ][

    if (getIsTimeIntervalNegative $newTimeTarget) [
      printGemaNotification (format $messageTimeTargetCanNotBeSet $messageTimeTargetMustBeAtLeastZeroMilliseconds);
    ][
      timeTarget = $newTimeTarget;
      onTimeTargetChange;
    ]
  ]

]
