//
// @author wesen
// @copyright 2019-2020 wesen <wesen-ac@web.de>
//

//
// Time target auto updater module for ac-gema-mode
//
// Handles automatic updating of the time target.
//
// Requires:
//   * scripts/ac-gema-mode/map-record/storage/best-map-record-cache.cfg
//   * scripts/ac-gema-mode/map-record/storage/map-record-loader.cfg
//   * scripts/ac-gema-mode/map-record/storage/map-record-storage.cfg
//   * scripts/ac-gema-mode/notification-printer.cfg
//   * scripts/ac-gema-mode/score-attempt/current-score-attempt.cfg
//   * scripts/ac-gema-mode/score-attempt/score-attempt-array.cfg
//   * scripts/ac-gema-mode/strings.cfg
//   * scripts/ac-gema-mode/time-target/time-target-mode.cfg
//   * scripts/ac-gema-mode/util/weapon-name-fetcher.cfg
//

// Options

//
// Option to auto reset the time target to 0 on quit (Default: 1)
//
// @var int $optionResetTimeTargetOnQuit
//
check2init optionResetTimeTargetOnQuit 1;

//
// Option to auto set the time target (Default: 0).
//
// 0: Disabled
// 1: Best Map Record
// 2: Best Primary Weapon Record
// 3: Best Score Attempt Weapon Record
//
// @var int $optionAutoSetTimeTargetMode
//
check2init optionAutoSetTimeTargetMode 0;

persistidents 0;


// Public Functions

//
// Initializes the auto time target with the configured auto set mode.
//
const initializeAutoTimeTarget [

  if (isTimeTargetModeActive) [
    updateBestMapRecordTimeTargetIfRequired;
    updateBestWeaponRecordTimeTargetIfRequired;

    if (! (strcmp (getCurrentScoreAttempt) "")) [
      updateBestScoreWeaponRecordTimeTargetIfRequired (getScoreAttemptWeaponId (getCurrentScoreAttempt));
    ]
  ]

]

//
// Sets $optionAutoSetTimeTargetMode and initializes the time target with the new auto set mode.
//
// @param int newAutoSetMode ($arg1) The new value for $optionAutoSetTimeTargetMode
//
const setOptionAutoSetTimeTargetMode [

  if (!= $arg1 $optionAutoSetTimeTargetMode) [
    optionAutoSetTimeTargetMode = $arg1;
    if (!= $optionAutoSetTimeTargetMode 0) [
      initializeAutoTimeTarget;
    ]
  ]

]


// Private Functions

//
// Changes the current time target.
//
// @param int newTimeTarget ($arg1) The new time target in milliseconds
//
const updateTimeTarget [

  newTimeTarget = $arg1;
  if (!= (getCurrentTimeTargetTotalMilliseconds) $newTimeTarget) [
    setCurrentTimeTargetTotalMilliseconds $newTimeTarget;
  ]

]

//
// Sets the time target to the best map record if $optionAutoSetTimeTargetMode is 1.
//
const updateBestMapRecordTimeTargetIfRequired [
  if (= $optionAutoSetTimeTargetMode 1) [
    updateTimeTarget (getMapRecordScoreTime (getBestMapRecord (curmap)));
  ]
]

//
// Sets the time target to the best primary weapon record if $optionAutoSetTimeTarget is 2.
//
const updateBestWeaponRecordTimeTargetIfRequired [
  if (= $optionAutoSetTimeTargetMode 2) [
    updateTimeTarget (getMapRecordScoreTime (loadWeaponMapRecord (curmap) (player1 primary)));
  ]
]

//
// Sets the time target to the best record for the current score weapon if $optionAutoSetTimeTarget is 3.
//
// @param int currentScoreWeaponId ($arg1) The id of the current score weapon
//
const updateBestScoreWeaponRecordTimeTargetIfRequired [

  if (= $optionAutoSetTimeTargetMode 3) [
    currentScoreWeaponId = $arg1;
    printGemaNotification (format $messageAutoSetTimeTargetToScoreWeaponRecord (getWeaponName $currentScoreWeaponId));
    updateTimeTarget (getMapRecordScoreTime (loadWeaponMapRecord (curmap) $currentScoreWeaponId));
  ]

]


// Event Handlers

//
// Event handler that is called when a new map starts.
//
checkinit mapstartalways [
  if (isTimeTargetModeActive) [
    updateBestMapRecordTimeTargetIfRequired;
  ]
]

//
// Event handler that is called when the time target mode state changes from "disabled" to "enabled".
//
checkinit onTimeTargetModeEnabled [
  initializeAutoTimeTarget;
]

//
// Event handler that is called after the current score attempt was started.
//
checkinit onCurrentScoreAttemptStarted [
  if (isTimeTargetModeActive) [
    updateBestScoreWeaponRecordTimeTargetIfRequired $KNIFE;
    updateBestWeaponRecordTimeTargetIfRequired;
  ]
]

//
// Event handler that is called after the score weapon of the current score attempt was changed.
//
// @param int newScoreWeaponId ($arg1) The new score weapon id
//
checkinit onCurrentScoreAttemptScoreWeaponChanged [
  if (isTimeTargetModeActive) [
    updateBestScoreWeaponRecordTimeTargetIfRequired $arg1;
  ]
]

//
// Event handler that is called after a map record was saved.
//
// @param array mapRecord ($arg1) The map record
//
checkinit onMapRecordSavedAfter [
  if (isTimeTargetModeActive) [
    updateBestMapRecordTimeTargetIfRequired;
  ]
]

//
// Event handler that is called when the game is closed.
//
checkinit onQuit [
  if ($optionResetTimeTargetOnQuit) [
    setCurrentTimeTargetTotalMilliseconds 0;
  ]
]
