//
// @author wesen
// @copyright 2017-2020 wesen <wesen-ac@web.de>
//

//
// Time target module for ac-gema-mode
//
// Provides functions to manage the current time target.
//
// Requires
//   * scripts/ac-gema-mode/notification-printer.cfg
//   * scripts/ac-gema-mode/strings.cfg
//   * scripts/ac-gema-mode/time/time-interval-array.cfg
//

//
// The current time target
//
// @var array $currentTimeTarget
//
checkinit currentTimeTarget (createTimeIntervalArray 0);

persistidents 0;


// Public Functions

//
// Returns the current time target.
//
// @return array The current time target
//
const getCurrentTimeTarget [
  return $currentTimeTarget;
]


//
// Returns the minutes part of the current time target.
//
// @return int The minutes part of the current time target
//
const getCurrentTimeTargetMinutes [
  return (getTimeIntervalMinutes $currentTimeTarget);
]

//
// Changes the minutes part of the current time target.
//
// @param int newTimeTargetMinutes ($arg1) The new minutes part of the current time target (Must be between 0 and 35791)
//
// @example `setCurrentTimeTargetMinutes 5` Sets the minutes part of the current time target to 5
//
const setCurrentTimeTargetMinutes [
  changeCurrentTimeTarget (changeTimeIntervalMinutes $currentTimeTarget $arg1);
]

//
// Returns the seconds part of the current time target.
//
// @return int The seconds part of the current time target
//
const getCurrentTimeTargetSeconds [
  return (getTimeIntervalSeconds $currentTimeTarget);
]

//
// Changes the seconds part of the current time target.
//
// @param int newTimeTargetSeconds ($arg1) The new seconds part of the current time target (Must be between 0 and 59)
//
// @example `setCurrentTimeTargetSeconds 47` Sets the seconds part of the current time target to 47
//
const setCurrentTimeTargetSeconds [
  changeCurrentTimeTarget (changeTimeIntervalSeconds $currentTimeTarget $arg1);
]

//
// Returns the milliseconds part of the current time target.
//
// @return int The milliseconds part of the current time target
//
const getCurrentTimeTargetMilliseconds [
  return (getTimeIntervalMilliseconds $currentTimeTarget);
]

//
// Changes the milliseconds part of the current time target.
//
// @param int newTimeTargetMilliseconds ($arg1) The new milliseconds part of the current time target (Must be between 0 and 999)
//
const setCurrentTimeTargetMilliseconds [
  changeCurrentTimeTarget (changeTimeIntervalMilliseconds $currentTimeTarget $arg1);
]


//
// Returns the total milliseconds of the current time target.
//
// @return int The total milliseconds of the current time target
//
const getCurrentTimeTargetTotalMilliseconds [
  return (getTimeIntervalTotalMilliseconds $currentTimeTarget);
]

//
// Sets the total milliseconds of the current time target.
//
// @param int newCurrentTimeTargetTotalMilliseconds ($arg1) The new total milliseconds of the current time target (Must be between 0 and 2147483647)
//
// @example `setCurrentTimeTargetTotalMilliseconds 10000` Sets the current time target to 10000 milliseconds (= 10 seconds)
//
const setCurrentTimeTargetTotalMilliseconds [
  changeCurrentTimeTarget (createTimeIntervalArray $arg1);
]


// Private Functions

//
// Changes the current time target to a specified time interval.
// Also fires the "onTimeTargetChanged" event when the time target is changed.
//
// @param array timeIntervalArray ($arg1) The time interval array to set the current time target to
//
const changeCurrentTimeTarget [

  newTimeTarget = $arg1;
  if (strcmp $newTimeTarget "") [
    printGemaNotification (format $messageTimeTargetCanNotBeSet (getLastTimeIntervalChangeErrorMessage));
  ][

    if (getIsTimeIntervalNegative $newTimeTarget) [
      printGemaNotification (format $messageTimeTargetCanNotBeSet $messageTimeTargetMustBeAtLeastZeroMilliseconds);
    ][
      currentTimeTarget = $newTimeTarget;
      onTimeTargetChanged;
    ]
  ]

]


// Custom Events

//
// Event handler that is called when the time target is changed via the "changeCurrentTimeTarget" function.
//
checkinit onTimeTargetChanged [
]
