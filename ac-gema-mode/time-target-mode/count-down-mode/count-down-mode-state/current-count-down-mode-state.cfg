//
// @author wesen
// @copyright 2020 wesen <wesen-ac@web.de>
//

//
// Current count down mode state module for ac-gema-mode
//
// Provides functions to manage the current count down mode state.
//
// Requires:
//   * scripts/ac-gema-mode/utils/state-manager.cfg
//

persistidents 0;

initializeState "CountDownMode" 0;


// Public Functions

//
// Returns the current count down mode state.
//
// @return int 1 if the count down mode is currently enabled, 0 otherwise
//
const getCurrentCountDownModeState [
  return (getState "CountDownMode");
]

//
// Tries to set the current count down mode state.
// If the count down mode state was successfully changed an optional success message will be shown.
// Otherwise the reason for not changing the count down mode state will be shown.
//
// @param int newCountDownModeState ($arg1) The new count down mode state
// @param string successNotification ($arg2) The notification to show on success (optional)
//
// @return int 1 if the count down mode state was successfully set, 0 otherwise
//
const tryToSetCountModeModeState [

  if (= $numargs 2) [
    return (tryToSetState "CountDownMode" $arg1 $arg2);
  ][
    return (tryToSetState "CountDownMode" $arg1);
  ]

]

//
// Returns the reason why the count down mode state can not be changed to a specified state.
//
// @param int newCountDownModeState ($arg1) The state to which the count down mode state should be set (0 or 1)
//
// @return string The reason why the count down mode state can not be changed or an empty string if it can be changed
//
const getCountDownModeStateCanNotBeChangedReason [

  if (= $arg1 1) [
    if (! (isTimeTargetModeActive)) [
      return $messageTimeTargetModeNotActive;
    ]
  ]

]


// Custom Events

//
// Event handler that is called when the count down mode state changes from "disabled" to "enabled".
//
checkinit onCountDownModeEnabled [
]

//
// Event handler that is called when the count down mode state changes from "enabled" to "disabled".
//
checkinit onCountDownModeDisabled [
]
