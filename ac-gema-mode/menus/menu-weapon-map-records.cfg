//
// @author wesen
// @copyright 2019 wesen <wesen-ac@web.de>
//

persistidents 0;

//
// Configuration for the "Weapon Records" menu
//
// Requires:
//   * scripts/ac-gema-mode/strings.cfg
//   * scripts/ac-gema-mode/map-record/storage/map-record-loader.cfg
//   * scripts/ac-gema-mode/map-record/output/menus/menu-string-generator.cfg
//   * scripts/ac-gema-mode/menus/menu-delete-record.cfg
//

//
// Hides the score weapon model above the menu.
//
const hideScoreWeaponModel [
  chmenumdl $menuShowRecordsTitle;
]

//
// Shows the delete record menu if there is a record for the map with the specified weapon.
//
// @param String $arg1 The map name
// @param int $arg2 The weapon id
//
const showDeleteRecordMenu [

  mapName = $arg1;
  weaponId = $arg2;

  currentMapRecord = (loadWeaponMapRecord $mapName $weaponId);

  if (! (strcmp $currentMapRecord "")) [
    deleteRecordWeaponId = $weaponId;
    showmenu $menuDeleteRecordTitle;
  ][
    // Prevents the "Weapon Records" menu from closing
    -1;
  ]

]

//
// Generates a weapon map record menu item for a specific weapon.
//
// @param int $arg1 The weapon id
// @param String $arg2 The path to the weapon model to display above the "Show Records" menu (optional)
//
const generateWeaponMapRecordMenuItem [

  weaponId = $arg1;
  modelDirectoryPath = $arg2;

  // Create a new menu item that shows the map record menu string and shows the "Delete Record" menu on selection
  mapRecordMenuItem = (format "menuitemvar [ getWeaponMapRecordMenuString (curmap) %1 ][ showDeleteRecordMenu (curmap) %1 ]" $weaponId);

  if (> (strlen $modelDirectoryPath) 0) [

    // Show the weapons map model above the menu when the path to the model directory is set
    mapRecordMenuItemHoverAction = (format "[ chmenumdl $menuShowRecordsTitle weapons/%1 mapmodel 75 12 ]" $modelDirectoryPath);
  ][
    mapRecordMenuItemHoverAction = "[ hideScoreWeaponModel ]";
  ]

  execute (concat $mapRecordMenuItem $mapRecordMenuItemHoverAction);

]

//
// Event handler that is called when a new map starts.
//
checkinit mapstartalways [
  // Select the map record with Assault Rifle
  menuselection $menuShowRecordsTitle 2;
]



newmenu $menuShowRecordsTitle

menumdl "weapons/assault/menu" idle 0 0
hideScoreWeaponModel;

menuitemvar [ format $menuItemCurrentMap (curmap) ]
menuitem [][][ hideScoreWeaponModel ]

// Primary Weapons
loop weaponIndex (listlen $primaryWeaponIds) [
  weaponId = (at $primaryWeaponIds $weaponIndex);
  modelDirectoryName = (at $DEFAULT_PRMDLDIRS $weaponIndex)

  execute (generateWeaponMapRecordMenuItem $weaponId (concatword $modelDirectoryName "/menu"));
]

// Secondary Weapons
execute (generateWeaponMapRecordMenuItem $PISTOL);
execute (generateWeaponMapRecordMenuItem $KNIFE);

menuitem [][][ hideScoreWeaponModel ];
menuitem $menuItemGoBackText [ closemenu $menuShowRecordsTitle ]
