//
// @author wesen
// @copyright 2020 wesen <wesen-ac@web.de>
//

//
// Map record comparator module for ac-gema-mode
//
// Provides functions to compare map record score times to other map records score times
//
// Requires:
//   * scripts/ac-gema-mode/map-record/map-record-array.cfg
//   * scripts/ac-gema-mode/map-record/storage/best-map-record-cache.cfg
//   * scripts/ac-gema-mode/map-record/storage/map-record-loader.cfg
//

persistidents 0;

//
// Comparison status for the case that the first map record score time is lower than the comparison map record score time.
//
// @var int $MAP_RECORD_COMPARISON_STATUS_FASTER
//
const MAP_RECORD_COMPARISON_STATUS_FASTER 1;

//
// Comparison status for the case that both map record score times are the same.
//
// @var int $MAP_RECORD_COMPARISON_STATUS_TIED
//
const MAP_RECORD_COMPARISON_STATUS_TIED 2;

//
// Comparison status for the case that the first map record score time is higher than the comparison map record score time.
//
// @var int $MAP_RECORD_COMPARISON_STATUS_LOWER
//
const MAP_RECORD_COMPARISON_STATUS_SLOWER 3;

//
// Comparison status for the case that the comparison map record is empty.
//
// @var int $MAP_RECORD_COMPARISON_STATUS_EMPTY
//
const MAP_RECORD_COMPARISON_STATUS_EMPTY 4;


// Public Functions

//
// Compares a map record to the best weapon map record of its map.
//
// @param array mapRecord ($arg1) The map record to compare to the best weapon map record
//
// @return int The comparison status (One of the MAP_RECORD_COMPARISON_STATUS constants)
//
const compareMapRecordToWeaponRecord [
  mapRecord = $arg1;
  bestWeaponRecord = (loadWeaponMapRecord (getMapRecordMapName $mapRecord) (getMapRecordWeaponId $mapRecord));

  return (compareMapRecordToSavedMapRecord $mapRecord $bestWeaponRecord);
]

//
// Compares a map record to a saved map record.
// The saved map record may be an empty string.
//
// @param array mapRecord ($arg1) The map record to compare to the saved weapon map record
// @param array savedMapRecord ($arg2) The saved weapon map record
//
// @return int The comparison status (One of the MAP_RECORD_COMPARISON_STATUS constants)
//
const compareMapRecordToSavedMapRecord [

  mapRecord = $arg1;
  savedMapRecord = $arg2;

  if (strcmp $savedMapRecord "") [
    return $MAP_RECORD_COMPARISON_STATUS_EMPTY;
  ][
    return (compareMapRecords $mapRecord $savedMapRecord);
  ]

]


// Private Functions

//
// Compares a map record to another map record.
//
// @param array mapRecord ($arg1) The first map record
// @param array comparisonMapRecord ($arg2) The second map record
//
// @return array The comparison status (One of the MAP_RECORD_COMPARISON_STATUS constants) and the score time difference
//
const compareMapRecords [

  mapRecord = $arg1;
  comparisonMapRecord = $arg2;

  mapRecordScoreTime = (getMapRecordScoreTime $mapRecord);
  comparisonScoreTime = (getMapRecordScoreTime $comparisonMapRecord);
  scoreTimeDifference = (- $comparisonScoreTime $mapRecordScoreTime);

  if (> $scoreTimeDifference 0) [
    mapRecordComparisonStatus = $MAP_RECORD_COMPARISON_STATUS_FASTER;
  ][
    if (= $scoreTimeDifference 0) [
      mapRecordComparisonStatus = $MAP_RECORD_COMPARISON_STATUS_TIED;
    ][
      mapRecordComparisonStatus = $MAP_RECORD_COMPARISON_STATUS_SLOWER;
    ]
  ]

  return (concat $mapRecordComparisonStatus $scoreTimeDifference);

]
