//
// @author wesen
// @copyright 2019 wesen <wesen-ac@web.de>
//

//
// Map statistics printer module for ac-gema-mode
//
// Handles printing of statistics about a map
//
// Requires:
//   * scripts/ac-gema-mode/strings.cfg
//   * scripts/ac-gema-mode/map-record/map-record.cfg
//   * scripts/ac-gema-mode/util/weapon-name-fetcher.cfg
//

// Options

//
// Option to show the list of missing weapons on map start
//
// @var int $optionShowMissingWeapons
//
check2init optionShowMissingWeapons 1;


persistidents 0;

// Public Functions

//
// Shows the best record of a map.
// Also show a list of weapons with which the map was not finished yet if $optionShowWeaponNotifications is 1.
//
// @param String $arg1 The map name
//
const printMapStatistics [

  mapName = $arg1;
  bestMapRecordWeaponId = (getBestMapRecordWeaponId $mapName);
  bestMapRecordTime = (loadMapRecord $mapName $bestMapRecordWeaponId);

  if (! (strcmp $bestMapRecordTime)) [

    bestMapRecordString = (format $messageBestMapRecordConsole (generateTimeString $bestMapRecordTime 1));
    if ($optionShowScoreWeapon) [
      bestMapRecordString = (concat $bestMapRecordString (format $messageBestMapRecordWeaponConsole (getWeaponName $bestMapRecordWeaponId)));
    ]

    printGemaNotification $bestMapRecordString;

    // TODO: Show missing weapons string only when show weapon system notifications option is set
    if ($optionShowMissingWeapons) [
      missingMapRecordWeaponNames = (getMissingMapRecordWeaponNamesString $mapName);
      if (! (strcmp $missingMapRecordWeaponNames "")) [
        printGemaNotification (format $messageMissingWeapons $missingMapRecordWeaponNames);
      ]
    ]
  ][
    printGemaNotification $messageNoMapRecords;
  ]

]


// Strings for the menus

//
// Returns the menu record string for the best map record.
//
// @param String $arg1 The map name
//
// @return String The map record menu string
//
const getBestMapRecordMenuString [

  mapName = $arg1;
  bestMapRecordWeaponId = (getBestMapRecordWeaponId $mapName);
  bestMapRecordTimeString = (getMapRecordMenuString $mapName $bestMapRecordWeaponId);

  if (&& (!= $bestMapRecordWeaponId -1) $optionShowScoreWeapon) [
    bestMapRecordTimeString = (concatword $bestMapRecordTimeString (format $messageBestMapRecordWeaponMenu (getWeaponName $bestMapRecordWeaponId)));
  ]

  return $bestMapRecordTimeString;
]

//
// Returns the menu item text for a record with a specific weapon.
//
// @param String $arg1 The map name
// @param int $arg2 The weapon id
//
// @return String The menu item text for the record
//
const getWeaponMapRecordMenuString [

  mapName = $arg1;
  weaponId = $arg2;

  return (format $weaponMapRecordMenuText (getWeaponName $weaponId) (getMapRecordMenuString $mapName $weaponId));

]

//
// Returns the weapon id of the best map record.
// Returns -1 when there is no record for the target map
//
// @param String $arg1 The map name
//
// @return int The weapon id of the best map record
//
const getBestMapRecordWeaponId [

  mapName = $arg1;
  bestMapRecordWeaponId = -1;
  bestMapRecordTime = 0;

  looplist $allWeaponIds weaponId [

    recordTime = (loadMapRecord $mapName $weaponId);

    if (&& $recordTime (|| (! $bestMapRecordTime) (> $bestMapRecordTime $recordTime))) [
      bestMapRecordWeaponId = $weaponId;
      bestMapRecordTime = $recordTime;
    ]

  ]

  return $bestMapRecordWeaponId;

]


// Private Functions

//
// Returns a comma separated string of weapons with which the player didn't score on a map.
// Returns an empty string when the map was finished with all weapons.
//
// @param String $arg1 The map name
//
// @return String The missing weapon names
//
const getMissingMapRecordWeaponNamesString [

  mapName = $arg1;
  missingWeaponNamesString = "";
  isFirstEntry = 1;

  looplist $allWeaponIds weaponId [

    recordTime = (loadMapRecord $arg1 $weaponId);

    // If there is no record for the map with that weapon
    if (! $recordTime)[

      if ($isFirstEntry)[
        isFirstEntry = 0;
      ][
        missingWeaponNamesString = (concatword $missingWeaponNamesString ", ");
      ]

      missingWeaponNamesString = (concatword $missingWeaponNamesString (getWeaponName $weaponId));
    ]

  ]

  return $missingWeaponNamesString;

]


// Event Handlers

//
// Event handler that is called after the gema mode auto de-/activation checks on map start are complete.
//
checkinit onGemaModeStateMapStartCheckAfter [
  if (isGemaModeActive) [
    printMapStatistics (curmap);
  ]
]
