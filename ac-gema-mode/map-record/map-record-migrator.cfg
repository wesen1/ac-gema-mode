//
// @author wesen
// @copyright 2020 wesen <wesen-ac@web.de>
//

//
// Map record migrator module for ac-gema-mode
//
// Provides methods to migrate map records from one revision to another.
//
// Requires:
//   * scripts/ac-gema-mode/custom-declarations.cfg
//   * scripts/ac-gema-mode/global-constants.cfg
//   * scripts/ac-gema-mode/map-record/map-record-array.cfg
//   * scripts/ac-gema-mode/map-record/storage/map-record-loader.cfg
//   * scripts/ac-gema-mode/map-record/storage/map-record-saver.cfg
//   * scripts/ac-gema-mode/notification-printer.cfg
//   * scripts/ac-gema-mode/unpersist/declarations.cfg
//   * scripts/ac-gema-mode/unpersist/functions.cfg
//

// Options

//
// Option to automatically migrate the map records of the previous version to the current version
// when a map revision update is detected (Default: 1)
//
// @var int $optionAutoMigrateMapRecordsOnRevisionUpdate
//
option optionAutoMigrateMapRecordsOnRevisionUpdate 1;

persistidents 0;


// Public Functions

//
// Migrates all map records for a given map revision to another map revision.
// Also writes the changes to saved.cfg.
//
// @param string mapName ($arg1) The map name
// @param int oldMapRevision ($arg2) The old map revision
// @param int newMapRevision ($arg3) The new map revision
//
function migrateMapRecordsFromRevisionTo [
  doMigrateMapRecordsFromRevisionTo $arg1 $arg2 $arg3;
  writecfg;
]

//
// Migrates all map records for a list of given map revisions to another map revision.
// Also writes the changes to saved.cfg.
//
// @param string mapName ($arg1) The map name
// @param int[] oldMapRevisions ($arg2) The old map revisions
// @param int newMapRevision ($arg3) The new map revision
//
function migrateMapRecordsFromRevisionsTo [

  mapName = $arg1;
  oldMapRevisions = $arg2;
  newMapRevision = $arg3;

  ulooplist $oldMapRevisions oldMapRevision [
    doMigrateMapRecordsFromRevisionTo $mapName $oldMapRevision $newMapRevision;
  ]

  writecfg;

]


// Private Functions

//
// Migrates all map records for a given map revision to another map revision.
// Map records that are faster than the existing records for the new map revision will be copied to the new map
// revision, all other map records will be ignored.
//
// @param string mapName ($arg1) The map name
// @param int oldMapRevision ($arg2) The old map revision
// @param int newMapRevision ($arg3) The new map revision
//
function doMigrateMapRecordsFromRevisionTo [

  mapName = $arg1;
  oldMapRevision = $arg2;
  newMapRevision = $arg3;

  ulooplist $allWeaponIds weaponId [
    oldWeaponMapRecord = (loadWeaponMapRecord $mapName $weaponId $oldMapRevision);
    if (! (strcmp $oldWeaponMapRecord) "") [
      newWeaponMapRecord = (setMapRecordMapRevision $oldWeaponMapRecord $newMapRevision);
      saveMapRecord $newWeaponMapRecord 0;
    ]
  ]

]

//
// Migrates all map records from the closest lower map revision to a given map revision.
//
// @param string mapName ($arg1) The map name
// @param int newCurrentMapRevision ($arg2) The new current map revision
//
function migrateMapRecordsFromClosestLowerRevision [

  mapName = $arg1;
  newCurrentMapRevision = $arg2;

  // Find the next lowest map revision
  closestLowerMapRevision = -1;
  ulooplist (getMapRevisionsWithRecords $mapName) mapRevision [
    if (< $mapRevision $newCurrentMapRevision) [
      closestLowerMapRevision = $mapRevision;
    ][
      break;
    ]
  ]

  if (!= $closestLowerMapRevision -1) [
    // Found a lower map revision, auto migrate
    doMigrateMapRecordsFromRevisionTo $mapName $closestLowerMapRevision $newCurrentMapRevision;
    printGemaNotification (format $messageAutoMigratedMapRecords $closestLowerMapRevision $newCurrentMapRevision);
  ]

]


// Event Handlers

//
// Event handler that is called when the current map revision for a map was updated.
//
// @param string mapName ($arg1) The map name
// @param int newCurrentMapRevision ($arg2) The new current map revision
//
eventlistener onCurrentMapRevisionUpdated [

  if ($optionAutoMigrateMapRecordsOnRevisionUpdate) [
    migrateMapRecordsFromClosestLowerRevision $arg1 $arg2;
  ]

]
