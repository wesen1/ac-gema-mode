//
// @author wesen
// @copyright 2020 wesen <wesen-ac@web.de>
//

//
// Map record migrator module for ac-gema-mode
//
// Provides methods to migrate map records from one revision to another.
//
// Requires:
//   * scripts/ac-gema-mode/global-constants.cfg
//   * scripts/ac-gema-mode/map-record/map-record-array.cfg
//   * scripts/ac-gema-mode/map-record/storage/map-record-loader.cfg
//   * scripts/ac-gema-mode/map-record/storage/map-record-saver.cfg
//

persistidents 0;


// Public Functions

//
// Migrates all map records for a given map revision to another map revision.
// Also writes the changes to saved.cfg.
//
// @param string mapName ($arg1) The map name
// @param int oldMapRevision ($arg2) The old map revision
// @param int newMapRevision ($arg3) The new map revision
//
const migrateMapRecordsFromRevisionTo [
  doMigrateMapRecordsFromRevisionTo $arg1 $arg2 $arg3;
  writecfg;
]

//
// Migrates all map records for a list of given map revisions to another map revision.
// Also writes the changes to saved.cfg.
//
// @param string mapName ($arg1) The map name
// @param int[] oldMapRevisions ($arg2) The old map revisions
// @param int newMapRevision ($arg3) The new map revision
//
const migrateMapRecordsFromRevisionsTo [

  mapName = $arg1;
  oldMapRevisions = $arg2;
  newMapRevision = $arg3;

  looplist $oldMapRevisions oldMapRevision [
    doMigrateMapRecordsFromRevisionTo $mapName $oldMapRevision $newMapRevision;
  ]

  writecfg;

]


// Private Functions

//
// Migrates all map records for a given map revision to another map revision.
// Map records that are faster than the existing records for the new map revision will be copied to the new map
// revision, all other map records will be ignored.
//
// @param string mapName ($arg1) The map name
// @param int oldMapRevision ($arg2) The old map revision
// @param int newMapRevision ($arg3) The new map revision
//
const doMigrateMapRecordsFromRevisionTo [

  mapName = $arg1;
  oldMapRevision = $arg2;
  newMapRevision = $arg3;

  looplist $allWeaponIds weaponId [
    oldWeaponMapRecord = (loadWeaponMapRecord $mapName $weaponId $oldMapRevision);
    if (! (strcmp $oldWeaponMapRecord) "") [
      newWeaponMapRecord = (setMapRecordMapRevision $oldWeaponMapRecord $newMapRevision);
      saveMapRecord $newWeaponMapRecord 0;
    ]
  ]

]
