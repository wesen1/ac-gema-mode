//
// @author wesen
// @copyright 2017-2020 wesen <wesen-ac@web.de>
//

//
// Console map record printer module for ac-gema-mode
//
// Handles printing of map records to the console at the top of the screen.
//
// Requires:
//   * scripts/ac-gema-mode/map-record/map-record-array.cfg
//   * scripts/ac-gema-mode/map-record/map-record-comparator.cfg
//   * scripts/ac-gema-mode/map-record/output/map-record-output.cfg
//   * scripts/ac-gema-mode/score-attempt/current-score-attempt-compare-map-record.cfg
//   * scripts/ac-gema-mode/strings.cfg
//   * scripts/ac-gema-mode/time/time-formatter.cfg
//


// Options

//
// Option to show the player name in the console score string (Default: 0)
//
// @var int $optionShowNameOnScore
//
check2init optionShowNameOnScore 0;

//
// Option to show the difference in milliseconds between the score attempt time and the comparison map record (Default: 1)
//
// @var int $optionShowDifferenceToScoreCompareTime
//
check2init optionShowDifferenceToScoreCompareTime 1;


persistidents 0;

//
// Generates and returns the map record output string for when the player scores.
//
// @param array mapRecord ($arg1) The map record
//
// @return string The map record output string for when the player scores
//
const getMapRecordScoreString [

  mapRecord = $arg1;
  mapRecordTeamId = (getMapRecordTeamId $mapRecord);

  if ($optionShowNameOnScore) [
    scorePlayerName = (format $messageScoreNamePlayerName (colorizePlayerName (player1 name) $mapRecordTeamId));
  ][
    scorePlayerName = $messageScoreNameYou;
  ]

  scoreTimeString = (generateTimeStringFromMilliseconds (getMapRecordScoreTime $mapRecord) 1);
  mapRecordString = (format $messageMapRecordScore $scorePlayerName $scoreTimeString);

  if ($optionShowScoreWeapon) [
    weaponName = (colorizeWeaponName (getMapRecordWeaponName $mapRecord) $mapRecordTeamId);
    weaponInfoString = (format $messageMapRecordScoreWeapon $weaponName);
    mapRecordString = (concat $mapRecordString $weaponInfoString);
  ]

  return $mapRecordString;

]

//
// Returns the record status string (new record, tied record, no new record).
// Must be called before the new record was saved.
//
// If no previous best map record is set the status string will always be the one for the comparison to
// the best map record.
// In any other case it will be the comparison to the best map record if $optionScoreTimeCompareValue is 0 or
// the comparison to the best weapon map record if $optionScoreTimeCompareValue is 1.
//
// @param array mapRecord ($arg1) The map record
// @param array comparisonMapRecord ($arg2) The comparison map record
//
// @return string The record status string
//
const getMapRecordStatusString [

  newMapRecord = $arg1;
  isNewBestMapRecord = (calculateIsNewBestMapRecord $newMapRecord);

  if ($isNewBestMapRecord) [
    comparisonMapRecord = (getBestMapRecord (getMapRecordMapName $newMapRecord));
    isComparisonToBestMapRecord = 1;
  ][
    comparisonMapRecord = $arg2;
    if (= $optionScoreTimeCompareValue $SCORE_TIME_COMPARE_VALUE_BEST_MAP_RECORD)) [
      isComparisonToBestMapRecord = 1;
    ][
      isComparisonToBestMapRecord = 0;
    ]
  ]

  comparisonToTargetMapRecord = (compareMapRecordToSavedMapRecord $newMapRecord $comparisonMapRecord);
  comparisonStatus = (at $comparisonToTargetMapRecord 0);

  differenceToTargetMapRecord = (at $comparisonToTargetMapRecord 1);

  if (= $comparisonStatus $MAP_RECORD_COMPARISON_STATUS_EMPTY) [
    // This is the first record for the map or with the score weapon
    return (getNewBestMapRecordString $newMapRecord $isComparisonToBestMapRecord);
  ][

    if (= $optionShowDifferenceToScoreCompareTime 1) [
      timeDifferenceString = (generateMapRecordTimeDifferenceString $comparisonStatus $differenceToTargetMapRecord);
    ][
      timeDifferenceString = "";
    ]

    if (= $comparisonStatus $MAP_RECORD_COMPARISON_STATUS_FASTER) [
      return (getFasterThanComparisonMapRecordString $newMapRecord $isComparisonToBestMapRecord $timeDifferenceString);
    ][
      if (= $comparisonStatus $MAP_RECORD_COMPARISON_STATUS_TIED) [
        return (getComparisonMapRecordTiedString $newMapRecord $isComparisonToBestMapRecord);
      ][
        return (getSlowerThanComparisonMapRecordString $newMapRecord $isComparisonToBestMapRecord $timeDifferenceString);
      ]
    ]

  ]

]


// Private Functions

//
// Generates and returns a map record time difference string.
//
// @param int comparisonStatus ($arg1) The comparison status to the comparison map record
// @param int timeDifferenceInMilliseconds ($arg2) The difference to the comparison map record
//
// @return string The generated time difference string
//
const generateMapRecordTimeDifferenceString [

  comparisonStatus = $arg1;
  timeDifferenceInMilliseconds = $arg2;

  if (= $comparisonStatus $MAP_RECORD_COMPARISON_STATUS_SLOWER) [
    timeDifferenceInMilliseconds = (* $timeDifferenceInMilliseconds -1);
  ]

  return (generateTimeStringFromMilliseconds $timeDifferenceInMilliseconds 1);

]

//
// Returns the "New best time" message for the case that the comparison record is empty.
//
// @param array newMapRecord ($arg1) The new map record
// @param int isComparisonToBestMapRecord ($arg2) 1 if the map record was compared to the best map record
//
// @return string The "New best time" message
//
const getNewBestMapRecordString [

  newMapRecord = $arg1;
  isComparisonToBestMapRecord = $arg2;

  // This is the first record for the map or with that weapon, so there is no time to compare the new record time to
  if ($isComparisonToBestMapRecord) [
    return $messageFasterThanBestMapRecord;
  ][
    mapRecordTeamId = (getMapRecordTeamId $newMapRecord);
    weaponName = (colorizeWeaponName (getMapRecordWeaponName $newMapRecord) $mapRecordTeamId);
    return (format $messageFasterThanWeaponMapRecord $weaponName);
  ]

]

//
// Returns the "Faster than map record" message.
//
// @param array newMapRecord ($arg1) The new map record
// @param int isComparisonToBestMapRecord ($arg2) 1 if the map record was compared to the best map record
// @param string timeDifferenceString ($arg3) The time difference of the map record to the best map record
//
// @return string The "Faster than map record" message
//
const getFasterThanComparisonMapRecordString [

  newMapRecord = $arg1;
  isComparisonToBestMapRecord = $arg2;
  timeDifferenceString = $arg3;

  if ($isComparisonToBestMapRecord) [

    if (strcmp $timeDifferenceString "") [
      return $messageFasterThanBestMapRecord;
    ][
      return (format $messageFasterThanBestMapRecordWithDifference $timeDifferenceString);
    ]

  ][
    mapRecordTeamId = (getMapRecordTeamId $newMapRecord);
    weaponName = (colorizeWeaponName (getMapRecordWeaponName $newMapRecord) $mapRecordTeamId);

    if (strcmp $timeDifferenceString "") [
      return (format $messageFasterThanWeaponMapRecord $weaponName);
    ][
      return (format $messageFasterThanWeaponMapRecordWithDifference $weaponName $timeDifferenceString);
    ]
  ]

]

//
// Returns the "Tied map record" message.
//
// @param array newMapRecord ($arg1) The new map record
// @param int isComparisonToBestMapRecord ($arg2) 1 if the map record was compared to the best map record
//
// @return string The "Tied map record" message
//
const getComparisonMapRecordTiedString [

  newMapRecord = $arg1;
  isComparisonToBestMapRecord = $arg2;

  if ($isComparisonToBestMapRecord) [
    return $messageTiedBestMapRecord;
  ][
    mapRecordTeamId = (getMapRecordTeamId $newMapRecord);
    weaponName = (colorizeWeaponName (getMapRecordWeaponName $newMapRecord) $mapRecordTeamId);
    return (format $messageTiedWeaponMapRecord $weaponName);
  ]

]

//
// Returns the "Slower than map record" message.
//
// @param array newMapRecord ($arg1) The new map record
// @param int isComparisonToBestMapRecord ($arg2) 1 if the map record was compared to the best map record
// @param string timeDifferenceString ($arg3) The time difference of the map record to the best map record
//
// @return string The "Slower than map record" message
//
const getSlowerThanComparisonMapRecordString [

  newMapRecord = $arg1;
  isComparisonToBestMapRecord = $arg2;
  timeDifferenceString = $arg3;

  if ($isComparisonToBestMapRecord) [

    if (strcmp $timeDifferenceString "") [
      return $messageSlowerThanBestMapRecord;
    ][
      return (format $messageSlowerThanBestMapRecordWithDifference $timeDifferenceString)
    ]

  ][
    mapRecordTeamId = (getMapRecordTeamId $newMapRecord);
    weaponName = (colorizeWeaponName (getMapRecordWeaponName $newMapRecord) $mapRecordTeamId);

    if (strcmp $timeDifferenceString "") [
      return (format $messageSlowerThanWeaponMapRecord $weaponName);
    ][
      return (format $messageSlowerThanWeaponMapRecordWithDifference $weaponName $timeDifferenceString);
    ]

  ]

]
