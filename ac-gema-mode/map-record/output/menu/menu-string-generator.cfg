//
// @author wesen
// @copyright 2017-2020 wesen <wesen-ac@web.de>
//

//
// Map record menu string generator module for ac-gema-mode
//
// Handles generating of menu strings to display map record information in menu items.
//
// Requires:
//   * scripts/ac-gema-mode/colors.cfg
//   * scripts/ac-gema-mode/map-record/map-record-array.cfg
//   * scripts/ac-gema-mode/map-record/output/map-record-output.cfg
//   * scripts/ac-gema-mode/map-record/storage/best-map-record-cache.cfg
//   * scripts/ac-gema-mode/map-record/storage/map-record-loader.cfg
//   * scripts/ac-gema-mode/strings.cfg
//   * scripts/ac-gema-mode/time/time-formatter.cfg
//   * scripts/ac-gema-mode/time/timestamp-formatter.cfg
//   * scripts/ac-gema-mode/util/weapon-name-fetcher.cfg
//

persistidents 0;


// Public Functions

//
// Returns the menu string for the best map record in the main menu.
//
// @param string mapName ($arg1) The map name
//
// @return string The best map record menu string
//
const getBestMapRecordMenuString [

  mapName = $arg1;
  bestMapRecord = (getBestMapRecord $mapName);

  bestMapRecordMenuString = (getScoreTimeMenuString $bestMapRecord 0);

  if (! (strcmp $bestMapRecord "")) [

    additionalInfos = (generateAdditionalMapRecordInfosMenuString $bestMapRecord 1);
    if (! (strcmp $additionalInfos "")) [
      additionalInfos = (format $menuItemMapRecordAdditionalInfos $additionalInfos);
      bestMapRecordMenuString = (concatword $bestMapRecordMenuString $additionalInfos);
    ]

  ]

  return $bestMapRecordMenuString;

]

//
// Returns the menu string for a record with a specific weapon in the "Weapon Records" menu.
//
// @param string mapName ($arg1) The map name
// @param int weaponId ($arg2) The weapon id
//
// @return string The weapon map record menu string
//
const getWeaponMapRecordMenuString [

  mapName = $arg1;
  bestMapRecord = (getBestMapRecord $mapName);

  weaponId = $arg2;

  mapRecord = (loadWeaponMapRecord $mapName $weaponId);
  mapRecordTeamId = (getMapRecordTeamId $mapRecord);
  isBestMapRecord = (&& (! (strcmp $mapRecord "")) (strcmp $mapRecord $bestMapRecord));

  if (strcmp $mapRecord "") [
    weaponName = (concat (c $colorWeapon) (getWeaponName $weaponId));
  ][
    weaponName = (colorizeWeaponName (getMapRecordWeaponName $mapRecord) $mapRecordTeamId $isBestMapRecord);
  ]

  weaponMapRecordMenuString = (format $weaponMapRecordMenuText $weaponName (getScoreTimeMenuString $mapRecord $isBestMapRecord));


  if (! (strcmp $mapRecord "")) [

    additionalInfos = (generateAdditionalMapRecordInfosMenuString $mapRecord 0);
    if (! (strcmp $additionalInfos "")) [
      additionalInfos = (format $menuItemMapRecordAdditionalInfos $additionalInfos);
      weaponMapRecordMenuString = (concatword $weaponMapRecordMenuString $additionalInfos);
    ]

  ]

  return $weaponMapRecordMenuString;

]


// Private Functions

//
// Generates and returns a string that contains additional map record infos that should be shown in the menus.
//
// @param array mapRecord ($arg1) The map record whose additional infos menu string to generate
// @param int allowScoreWeaponName ($arg2) 1 to allow adding the score weapon name to the string if required, 0 otherwise
//
// @return string The generated additional map record infos string
//
const generateAdditionalMapRecordInfosMenuString [

  mapRecord = $arg1;
  allowScoreWeaponName = $arg2;

  mapRecordTeamId = (getMapRecordTeamId $mapRecord);

  additionalInfos = "";
  if (&& $allowScoreWeaponName $optionShowScoreWeapon) [
    weaponName = (colorizeWeaponName (getMapRecordWeaponName $mapRecord) $mapRecordTeamId 0);
    additionalInfos = $weaponName;
  ]

  if (= $optionShowMapRecordTeam 5) [
    teamName = (colorizeTeamName (getMapRecordTeamName $mapRecord) $mapRecordTeamId);

    if (strcmp $additionalInfos "") [
      additionalInfos = $teamName;
    ][
      additionalInfos = (format $menuItemMapRecordAdditionalInfosMultiple $additionalInfos $teamName);
    ]
  ]

  if ($optionShowMapRecordTimestamp) [

    mapRecordTimestamp = (getMapRecordTimestampArray $mapRecord);
    timestampDate = (colorizeTimestampDate (formatTimestampDate $mapRecordTimestamp) $mapRecordTeamId);

    if ($optionShowMapRecordTimestampTimePart) [
      timestampTime = (colorizeTimestampTime (formatTimestampTime $mapRecordTimestamp) $mapRecordTeamId);
      timestampInfoString = (concat $timestampDate $timestampTime);
    ][
      timestampInfoString = $timestampDate;
    ]

    if (strcmp $additionalInfos "") [
      additionalInfos = $timestampInfoString;
    ][
      additionalInfos = (format $menuItemMapRecordAdditionalInfosMultiple $additionalInfos $timestampInfoString);
    ]

  ]


  return $additionalInfos;

]

//
// Returns a string that represents a map record's score time for a menu.
// Will return a "No record" message when the map record is empty.
//
// @param array mapRecord ($arg1) The map record
// @param int highlightAsBestScoreTime ($arg2) 1 to highlight the score time as best score time
//
// @return string The map record score time string
//
const getScoreTimeMenuString [

  mapRecord = $arg1;
  highlightAsBestScoreTime = $arg2;

  if (strcmp $mapRecord "") [
    return $messageNoMapRecord;
  ][
    scoreTimeColors = (getScoreTimeColors (getMapRecordTeamId $mapRecord) $highlightAsBestScoreTime);
    return (generateTimeStringFromMilliseconds (getMapRecordScoreTime $mapRecord) $scoreTimeColors);
  ]

]
