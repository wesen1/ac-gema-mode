//
// @author wesen
// @copyright 2019-2020 wesen <wesen-ac@web.de>
//

//
// Map record array module for ac-gema-mode
//
// Provides functions to create, modify and fetch the values of map record arrays.
// The map record arrays are in the format [ <mapName> <scoreTime> <weaponId> ].
//
// Requires:
//   * scripts/ac-gema-mode/util/team-name-fetcher.cfg
//   * scripts/ac-gema-mode/util/weapon-name-fetcher.cfg
//

persistidents 0;


// Public Functions

//
// Creates and returns a map record array.
//
// @param string mapName ($arg1) The map name
// @param int mapRevision ($arg2) The map revision
// @param int scoreTime ($arg3) The score time in milliseconds
// @param int weaponId ($arg4) The weapon id
// @param int teamId ($arg5) The team id
// @param array timestamp ($arg6) The timestamp of the record (The result of "timestamp" or a "_" concatenated timestamp string)
//
// @return array The created map record array
//
const createMapRecordArray [
  return (concat $arg1 $arg2 $arg3 $arg4 $arg5 (strreplace $arg6 " " "_"));
]

//
// Returns a map record's map name.
//
// @param array mapRecordArray ($arg1) The map record array
//
// @return string The map record's map name
//
const getMapRecordMapName [
  return (at $arg1 0);
]

//
// Returns a map record's map revision.
//
// @param array mapRecordArray ($arg1) The map record array
//
// @return int The map record's map revision
//
const getMapRecordMapRevision [
  return (at $arg1 1);
]

//
// Returns a map record's score time.
//
// @param array mapRecordArray ($arg1) The map record array
//
// @return int The map record's score time
//
const getMapRecordScoreTime [
  return (at $arg1 2);
]

//
// Returns a map record's weapon id.
//
// @param array mapRecordArray ($arg1) The map record array
//
// @return int The map record's weapon id
//
const getMapRecordWeaponId [
  return (at $arg1 3);
]

//
// Returns a map record's weapon name.
//
// @param array mapRecordArray ($arg1) The map record array
//
// @return string The weapon name
//
const getMapRecordWeaponName [

  weaponId = (getMapRecordWeaponId $arg1);
  if (strcmp $weaponId "") [
    return "";
  ][
    return (getWeaponName $weaponId);
  ]

]

//
// Returns a map record's team id.
//
// @param array mapRecordArray ($arg1) The map record array
//
// @return int The team id
//
const getMapRecordTeamId [
  return (at $arg1 4);
]

//
// Returns a map record's team name.
//
// @param array mapRecordArray ($arg1) The map record array
//
// @return string The team name
//
const getMapRecordTeamName [

  teamId = (getMapRecordTeamId $arg1);
  if (strcmp $teamId "") [
    return "";
  ][
    return (getTeamName $teamId);
  ]

]

//
// Returns a map record's timestamp as a "_" concatenated string.
//
// @param array mapRecordArray ($arg1) The map record array
//
// @return string The timestamp string
//
const getMapRecordTimestampString [
  return (at $arg1 5);
]

//
// Returns a map record's timestamp as an array in the same format as "timestamp"'s return value.
//
// @param array mapRecordArray ($arg1) The map record array
//
// @return array The timestamp array
//
const getMapRecordTimestampArray [
  return (strreplace (getMapRecordTimestampString $arg1) "_" " ");
]


//
// Returns whether a map record is for a given map name in a specific map revision.
//
// @param array mapRecordArray ($arg1) The map record array
// @param string mapName ($arg2) The map name
// @param string mapRevision ($arg3) The map revision
//
// @return int 1 if the map record is for the given map name and revision, 0 otherwise
//
const isMapRecordForMapAndRevision [
  return (&& (strcmp (getMapRecordMapName $arg1) $arg2) (= (getMapRecordMapRevision $arg1) $arg3));
]
