//
// @author wesen
// @copyright 2020 wesen <wesen-ac@web.de>
//

//
// Menu utils module for ac-gema-mode
//
// Provides various menu related util functions.
//
// Requires:
//   * scripts/ac-gema-mode/custom-declarations.cfg
//   * scripts/ac-gema-mode/output/output-utils.cfg
//   * scripts/ac-gema-mode/unpersist/declarations.cfg
//   * scripts/ac-gema-mode/unpersist/functions.cfg
//

// Options

//
// The font type that should be used to format menus
// If -1 the font type will be dynamically read from $__fontsetting.
// If >= 0 the font type will be fixed to the $optionMenuFontType value
//
// @var int $optionMenuFontType
//
option optionMenuFontType -1;

persistidents 0;


// Global Variables

//
// The last font type that the menu pad tabs were calculated for
//
// @var int $lastCalculatedMenuPadTabsFontType
//
cache lastCalculatedMenuPadTabsFontType -1;

//
// The list of menu pad tab calculating functions
// These functions will be called every time the calculateMenuPadTabs function recalcuates the menu pad tabs
//
// @var string[] $menuPadTabCalculators
//
cache menuPadTabCalculators [];


// Public Functions

//
// Reloads a menu and selects a specified line in the menu.
// This can be used to properly update checkboxes that the user is not allowed to activate or to
// reset text input field values when invalid input text is inserted.
//
// @param string menuName ($arg1) The name of the menu to refresh
// @param int lineNumber ($arg2) The line number to select after the refresh
//
function refreshMenu [
  menuName = $arg1;
  selectedLineNumber = $arg2;

  closemenu $menuName;
  showmenu $menuName;
  menuselection $menuName $selectedLineNumber;
]

//
// Calculates the menu pad tabs using the $menuPadTabCalculators if the given font type differs from the $lastCalculatedMenuPadTabsFontType.
//
// @param int fontType ($arg1) The font type to calculate the menu pad tabs for
//
function calculateMenuPadTabs [

  fontType = $arg1;
  if (!= $lastCalculatedMenuPadTabsFontType $fontType) [
    ulooplist $menuPadTabCalculators menuPadTabCalculator [
      $menuPadTabCalculator $fontType;
    ]

    lastCalculatedMenuPadTabsFontType = $fontType;
  ]

]

//
// Adds a menu pad tab calculating function.
//
// @param string menuPadTabCalculator ($arg1) The name of the menu pad tab calculating function to add
//
function addMenuPadTabCalculator [
  add2list menuPadTabCalculators $arg1;
]


//
// Returns the font type that should be used for formatting menus.
//
// @return int The menu font type
//
function getMenuFontType [

  if (= $optionMenuFontType -1) [
    return $__fontsetting;
  ][
    return $optionMenuFontType;
  ]

]

//
// Returns the value names for the possible values of the menu font type option.
//
// @return string[] The value names for the possible values of the menu font type option
//
function getAvailableMenuFontTypes [
  return (concat "auto" (getAvailableFontTypes));
]


//
// Generates text menu items with a limited width from a given list of words.
//
// @param string[] outputText ($arg1) The list of words to generate text menu items from
// @param int maximumLineWidth ($arg2) The maximum width per menu item
// @param string outputLinePrefix ($arg3) The prefix per menu item
//
function generateTextMenuItems [
  outputLines = (generateOutputLines $arg1 $arg2 $arg3 (getMenuFontType));
  ulooplist $outputLines outputLine [
    menuitem (strreplace $outputLine $TEMPORARY_WHITESPACE " ") [ -1 ];
  ]
]
