//
// @author wesen
// @copyright 2020 wesen <wesen-ac@web.de>
//

//
// Number utils module for ac-gema-mode
//
// Provides various numeric string related util functions.
//
// Requires:
//   * scripts/ac-gema-mode/unpersist/declarations.cfg
//   * scripts/ac-gema-mode/util/string-utils.cfg
//

persistidents 0;


// Public Functions

//
// Converts a given string to an integer.
//
// Given strings may contain a leading "-" or "+", however the "+" will not be contained in the resulting integer.
// Leading and trailing non digits will be ignored.
// Leading zeros will be trimmed.
// If the given string does not contain any digits 0 will be returned.
//
// @param string targetString ($arg1) The string to convert to an integer
//
// @return int The integer value of the target string
//
function stringToInteger [

  targetString = $arg1;
  isNegativeNumber = (= (strpos $targetString "-") 0);

  if (strstr "+-" (substr $targetString 0 1)) [
    targetString = (substr $targetString 1);
  ]

  // Leading zeros must be removed to prevent strings from being interpreted as octal numbers
  isLeadingRemovableCharacter = [
    return (strcmp $arg1 "0");
  ];
  isTrailingRemovableCharacter = [
    return 0;
  ];
  numericString = (trimLeadingAndTrailingCharacters $targetString "isLeadingRemovableCharacter" "isTrailingRemovableCharacter");

  integerValue = (+ $numericString 0);
  if ($isNegativeNumber) [
    integerValue = (* $integerValue -1);
  ]

  return $integerValue;

]

//
// Returns whether a given string is a valid integer.
// A leading "+" or "-" as well as leading zeros are allowed.
//
// @param string targetString ($arg1) The string to check
//
// @return int 1 if the string is a valid integer, 0 otherwise
//
function isStringValidInteger [

  validnumber_targetString = $arg1;
  integerValue = (stringToInteger $validnumber_targetString);

  // Must remove a leading "+" for the comparison because "stringToInteger" and "l0" remove the "+" from numbers
  if (strpos $validnumber_targetString "+") 0) [
    validnumber_targetString = (substr $validnumber_targetString 1);
  ]

  // Return true if the integer value padded with zeros is exactly the same as the input string
  return (strcmp (l0 (strlen $validnumber_targetString) $integerValue) $validnumber_targetString);

]
