//
// @author wesen
// @copyright 2017 wesen <wesen-ac@web.de>
//

//
// Map name checker module for ac-gema-mode
//
// Checks whether a map name is a gema map name
//

persistidents 0;

const gemaMapNameImplicits ["jigsaw" "deadmeat-10"];
const gemaMapNameCodes ["g" "3e" "m" "a@4"];


//
// Returns whether a map name is a gema map name.
//
// @param String $arg1 The map name
//
// @return int 0: Map name is not a gema map name
//             1: Map name is a gema map name
//
const isGemaMapName [

  if (|| (containsGemaMapNameImplicit (tolower $arg1)) (containsGemaMapNameCodes (tolower $arg1))) [
    return 1;
  ][
    return 0;
  ]

]

//
// Checks whether a map name contains one of the implicit words.
//
// @param String $arg1 The map name
//
// @return int 0: Map name does not contain any of the implicit words
//             1: Map name contains one of the implicit words
//
const containsGemaMapNameImplicit [

  mapNameCheckerTmpReturnValue = 0;

  looplist $gemaMapNameImplicits gemaMapNameImplicit [

    if (strstr $arg1 $gemaMapNameImplicit) [
      mapNameCheckerTmpReturnValue = 1;
      break;
    ]

  ]

  return $mapNameCheckerTmpReturnValue;

]

//
// Checks whether a map name contains ge3ma@4.
//
// @param String $arg1 The map name
//
// @return int 0: Map name does not contain ge3ma@4
//             1: Map name contains ge3ma@4
//
const containsGemaMapNameCodes [

  gemaMapNameMatches = 0;
  gemaMapNameCodePart = 0;

  // Iterate over all letters of the mapname
  parsestring $arg1 mapNameLetter [

    gemaMapNameCode = (at $gemaMapNameCodes $gemaMapNameCodePart);

    // Must use loop here because nested parsestrings do not work
    loop i (strlen $gemaMapNameCode) [

      gemaMapNameCodeLetter = (substr $gemaMapNameCode $i 1);

      if (strcmp $gemaMapNameCodeLetter $mapNameLetter) [
        ++ gemaMapNameMatches;
        break;
      ]

    ]

    ++ gemaMapNameCodePart;

    if (!= $gemaMapNameMatches $gemaMapNameCodePart) [
      gemaMapNameMatches = 0;
      gemaMapNameCodePart = 0;
    ][
      if (= $gemaMapNameMatches (listlen $gemaMapNameCodes)) [
        breakparse;
      ]
    ]

  ]

  if (= $gemaMapNameMatches 4) [
    return 1;
  ][
    return 0;
  ]

]

