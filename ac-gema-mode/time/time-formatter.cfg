//
// @author wesen
// @copyright 2017-2020 wesen <wesen-ac@web.de>
//

//
// Time formatter module for ac-gema-mode
//
// Provides functions to generate human readable time strings from milliseconds and time intervals.
//
// Requires:
//   * scripts/ac-gema-mode/time/time-interval-array.cfg
//

persistidents 0;


// Public Functions

//
// Generates and returns a time string in the format <minutes>:<seconds>:<milliseconds> from a time in milliseconds.
//
// @param int milliseconds ($arg1) The time in milliseconds
// @param int includeMilliseconds ($arg2) 1 if the time string should contain the milliseconds
//
// @return string The generated time string
//
// @example `generateTimeStringFromMilliseconds 6700` Will return "00:06"
// @example `generateTimeStringFromMilliseconds 6700 1` Will return "00:06,700"
//
const generateTimeStringFromMilliseconds [
  return (generateTimeStringFromTimeInterval (createTimeIntervalArray $arg1) $arg2);
]

//
// Generates and returns a time string in the format <minutes>:<seconds>:<milliseconds> from a time in milliseconds.
//
// @param array timeIntervalArray ($arg1) The time interval array
// @param int includeMilliseconds ($arg2) 1 if the time string should contain the milliseconds
//
// @return string The generated time string
//
const generateTimeStringFromTimeInterval [

  timeIntervalArray = $arg1;

  // Add leading 0s
  minutesString = (l0 2 (getTimeIntervalMinutes $timeIntervalArray));
  secondsString = (l0 2 (getTimeIntervalSeconds $timeIntervalArray));

  timeString = (concatword $minutesString ":" $secondsString);

  if (= $arg2 1) [
    millisecondsString = (l0 3 (getTimeIntervalMilliseconds $timeIntervalArray));
    timeString = (concatword $timeString "," $millisecondsString);
  ]

  return $timeString;

]
