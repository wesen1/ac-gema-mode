//
// @author wesen
// @copyright 2020 wesen <wesen-ac@web.de>
//

//
// Time interval comparator module for ac-gema-mode
//
// Provides functions to compare time intervals to other time intervals
//
// Requires:
//   * scripts/ac-gema-mode/time/time-interval-array.cfg
//

persistidents 0;

//
// Comparison status for the case that the first time interval is lower than the comparison time interval
//
// @var int $TIME_INTERVAL_COMPARISON_STATUS_LOWER
//
const TIME_INTERVAL_COMPARISON_STATUS_LOWER 1;

//
// Comparison status for the case that both time intervals are the same
//
// @var int $TIME_INTERVAL_COMPARISON_STATUS_SAME
//
const TIME_INTERVAL_COMPARISON_STATUS_SAME 2;

//
// Comparison status for the case that the first time interval is higher than the comparison time interval
//
// @var int $TIME_INTERVAL_COMPARISON_STATUS_HIGHER
//
const TIME_INTERVAL_COMPARISON_STATUS_HIGHER 3;


// Public Functions

//
// Returns the difference between two time intervals as a time interval.
//
// @param array baseTimeIntervalArray ($arg1) The base time interval array
// @param array comparisonTimeIntervalArray ($arg2) The comparison time interval array
//
// @return array The difference between the two time intervals as a time interval array
//
const calculateTimeIntervalDifference [
  millisecondsDifference = (calculateTimeIntervalDifferenceInMilliseconds $arg1 $arg2);
  return (createTimeIntervalArray $millisecondsDifference);
]

//
// Compares a time interval to another time interval.
//
// @param array baseTimeIntervalArray ($arg1) The base time interval array
// @param array comparisonTimeIntervalArray ($arg2) The comparison time interval array
//
// @return int The comparison status (One of the TIME_INTERVAL_COMPARISON_STATUS constants)
//
const compareTimeIntervals [

  millisecondsDifference = (calculateTimeIntervalDifferenceInMilliseconds $arg1 $arg2);

  if (> $millisecondsDifference 0) [
    return $TIME_INTERVAL_COMPARISON_STATUS_HIGHER;
  ][
    if (= $millisecondsDifference 0) [
      return $TIME_INTERVAL_COMPARISON_STATUS_SAME;
    ][
      return $TIME_INTERVAL_COMPARISON_STATUS_LOWER;
    ]
  ]

]


// Private Functions

//
// Returns the difference between two time intervals in milliseconds.
//
// @param array baseTimeIntervalArray ($arg1) The base time interval array
// @param array comparisonTimeIntervalArray ($arg2) The comparison time interval array
//
// @return int The difference between the two time intervals in milliseconds
//
const calculateTimeIntervalDifferenceInMilliseconds [

  baseTimeIntervalTotalMilliseconds = (getTimeIntervalTotalMilliseconds $arg1);
  comparisonTimeIntervalTotalMilliseconds = (getTimeIntervalTotalMilliseconds $arg2);

  return (- $baseTimeIntervalTotalMilliseconds $comparisonTimeIntervalTotalMilliseconds);

]
