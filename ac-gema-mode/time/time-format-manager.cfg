//
// @author wesen
// @copyright 2020 wesen <wesen-ac@web.de>
//

//
// Time format manager module for ac-gema-mode
//
// Provides predefined time formats and functions to define and fetch time formats for specific scopes.
//
// Requires:
//   * scripts/ac-gema-mode/colors.cfg
//   * scripts/ac-gema-mode/custom-declarations.cfg
//   * scripts/ac-gema-mode/time/time-formatter.cfg
//   * scripts/ac-gema-mode/unpersist/declarations.cfg
//   * scripts/ac-gema-mode/util/value-persistor.cfg
//

persistidents 0;


// Constants

//
// The names of the predefined time formats
//
// @var string[] $predefinedTimeFormatNames
//
const predefinedTimeFormatNames ["default" "classic" "countdown"];

//
// The predefined time formats
//
// @var string[] $predefinedTimeFormats
//
const predefinedTimeFormats ["-%02i- %02s- %03v-" "%02i:%02s,%03v %T+" "%02i:%02s"];


// Global variables

//
// The list of existing time format scopes.
// Scopes will be added to this list via "addTimeFormatScope"
//
// @var string[] $timeFormatScopes
//
cache timeFormatScopes [];

//
// The list of default time colors per time format scope.
// Will be used by the "Change time formats" menu.
//
// @var string[][] $timeFormatScopeDefaultColors
//
cache timeFormatScopesDefaultTimeColors [];


// Public Functions

//
// Returns the names of all currently defined time format scopes.
//
// @return string[] The names of all currently defined time format scopes
//
function getTimeFormatScopes [
  return $timeFormatScopes;
]

//
// Adds a time format scope.
//
// @param string timeFormatScopeName ($arg1) The name of the time format scope
// @param string[] defaultTimeColors ($arg2) The default time colors for the time format scope
// @param string defaultTimeFormat ($arg3) The default time format scope (optional, Default = $defaultTimeFormat)
//
function addTimeFormatScope [

  timeFormatScopeName = $arg1;
  timeFormatScopeDefaultTimeColors = $arg2;
  if (= $numargs 3) [
    timeFormatScopeDefaultTimeFormat = $arg3;
  ][
    timeFormatScopeDefaultTimeFormat = $defaultTimeFormat;
  ]

  add2list timeFormatScopes $timeFormatScopeName;
  add2list timeFormatScopesDefaultTimeColors (format ["%1"] $timeFormatScopeDefaultColorList);

  option (getTimeFormatOptionNameForTimeFormatScope $timeFormatScopeName) $timeFormatScopeDefaultTimeFormat;

]

//
// Returns the time format for a given time format scope.
// Will return the $defaultTimeFormat if the configured time format for the scope is empty.
//
// @param string timeFormatScopeName ($arg1) The name of the time format scope
//
// @return string The time format for the given time format scope
//
function getTimeFormatForScope [

  timeFormatScopeName = $arg1;
  if (= (findlist $timeFormatScopes $timeFormatScopeName) -1) [
    // Not a valid time format scope
    return $defaultTimeFormat;
  ][
    timeFormatForScope = (getalias (getTimeFormatOptionNameForTimeFormatScope $timeFormatScopeName));
    if (strcmp $timeFormatForScope "") [
      return $defaultTimeFormat;
    ][
      return $timeFormatForScope;
    ]
  ]

]

//
// Sets the time format for a given time format scope.
//
// @param string timeFormatScopeName ($arg1) The name of the time format scope
// @param string timeFormatForScope ($arg2) The time format to set
//
function setTimeFormatForScope [
  setPersistentValue (getTimeFormatOptionNameForTimeFormatScope $arg1) $arg2;
]

//
// Returns the default time colors for a given time format scope.
//
// @param string timeFormatScopeName ($arg1) The name of the time format scope
//
// @return string[] The default time colors for the given time format scope
//
function getDefaultTimeColorsForTimeFormatScope [

  timeFormatScopeIndex = (findlist $timeFormatScopes $arg1);
  if (= $timeFormatScopeIndex -1) [
    // Not a valid time format scope
    return $colorsInvalidTimeFormatScopeTime;
  ][
    return (at timeFormatScopesDefaultTimeColors $timeFormatScopeIndex);
  ]

]


// Private Functions

//
// Returns the time format option name for a given time format scope.
//
// @param string timeFormatScopeName ($arg1) The name of the time format scope
//
// @return string The time format option name for the given time format scope
//
function getTimeFormatOptionNameForTimeFormatScope [
  return (format "option%1TimeFormat" $arg1);
]
