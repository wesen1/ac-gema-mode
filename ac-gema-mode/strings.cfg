//
// @author wesen
// @copyright 2019-2020 wesen <wesen-ac@web.de>
//

//
// Stores notification messages and menu strings.
//
// Requires:
//   * scripts/ac-gema-mode/colors.cfg
//

persistidents 0;


// Util

// Generic template for a comma separator for a output list
const stringOutputListCommaSeparatorTemplate "%1, ";

// Generic template for a "and" separator for a output list
const stringOutputListAndSeparatorTemplate "%1 and ";


// Notification messages


// environment-checker

// The "Game mode is not CTF" reason for "getEnvironmentNotGemaCompatibleReason"
const messageGameModeNotCtf "Game mode is not CTF";

// The "Map is not a gema map" reason for "getEnvironmentNotGemaCompatibleReason"
const messageMapNotGemaMap "Map is not a gema map";

// The "Watching a demo" reason for "getEnvironmentNotGemaCompatibleReason"
const messageWatchingDemo "Watching a demo";


// gema-mode-state

// Template for the "Gema mode cannot be enabled" error message
const messageGemaModeCanNotBeEnabled (concat (c $colorError) "Can not enable gema mode: %1.");

// Template for the "Gema mode cannot be disabled" error message
const messageGemaModeCanNotBeDisabled (concat (c $colorError) "Can not disable gema mode: %1.");

// The "Gema mode auto enabled" info message
const messageGemaModeAutoEnabled (concat (c $colorSuccess) "Gema mode automatically enabled!");

// Template for the "Gema mode disabled" info message
const messageGemaModeAutoDisabled (concat (c $colorGemaModeDisabled) "Gema mode disabled: %1.");


// map-record

// The "Record deleted" info message
const messageSingleWeaponMapRecordDeleted (concatword (c $colorSuccess) "Record for " (c $colorMapName) "%1" (c $colorSuccess) " revision " (c $colorMapRevision) "%2" (c $colorSuccess) " with " (c $colorWeapon) "%3" (c $colorSuccess) " deleted");

// The "All records of map deleted" info message
const messageAllRecordsOfMapDeleted (concatword (c $colorSuccess) "All records for " (c $colorMapName) "%1" (c $colorSuccess) " deleted");

// The "All records of map in revision deleted" info message
const messageAllRecordsOfMapInRevisionDeleted (concatword (c $colorSuccess) "All records for " (c $colorMapName) "%1" (c $colorSuccess) " revision " (c $colorMapRevision) "%2" (c $colorSuccess) " deleted");


// map-record-printer

// The "No record" info message
const messageNoMapRecord (concat (c $colorNoRecord) "No record");

// Template for player names
const messageScoreNamePlayerName (concatword "%1" (c $colorRecordInfo));

// The "You" player name for score messages
const messageScoreNameYou (concat (c $colorRecordInfo) "You");

// Template for score messages
const messageMapRecordScore (concat "%1 scored after %2");

// Template for the score weapon info for score messages
const messageMapRecordScoreWeapon (concat (c $colorRecordInfo) "with %1");

// Template for the score team info for score messages
const messageMapRecordScoreTeam (concat (c $colorRecordInfo) "in team %1");

// The "New best time" info message without difference to the compare time
const messageFasterThanBestMapRecord (concat (c $colorNewRecord) "*** New best time ***");

// The "Tied your current record" info message without difference to the compare time
const messageTiedBestMapRecord (concat (c $colorRecordTied) "Tied your current record");

// The "But you have a better record" info message without difference to the compare time
const messageSlowerThanBestMapRecord (concat (c $colorRecordSlower) "But you have a better record");

// Template for "New best time with weapon" info messages without difference to the compare time
const messageFasterThanWeaponMapRecord (concat (c $colorNewRecord) "New best time with %1");

// Template for "Tied you current record with weapon" info messages without difference to the compare time
const messageTiedWeaponMapRecord (concat (c $colorRecordTied) "Tied your current record with %1");

// Template for "But you have a better record with weapon" info messages without difference to the compare time
const messageSlowerThanWeaponMapRecord (concat (c $colorRecordSlower) "But you have a better record with %1");


// Template for "New best time" info messages with difference to the compare time
const messageFasterThanBestMapRecordWithDifference (concat (c $colorNewRecord) "*** Improved best map record by %1" (c $colorNewRecord) "***");

// Template for "But you have a better record" info messages with difference to the compare time
const messageSlowerThanBestMapRecordWithDifference (concat "%1" (c $colorRecordSlower) "slower than current best map record");

// Template for "New best time with weapon" info messages with difference to the compare time
const messageFasterThanWeaponMapRecordWithDifference (concat (c $colorNewRecord) "Improved best map record with %1" (c $colorNewRecord) "by %2");

// Template for "But you have a better record with weapon" info messages with difference to the compare time
const messageSlowerThanWeaponMapRecordWithDifference (concat "%2" (c $colorRecordSlower) "slower than current best map record with %1");


// map-statistics-printer

// Template for the best map record map statistics message
const messageBestMapRecordConsole (concat (c $colorRecordInfo) "Your best time for this map is %1");

// Template for the score weapon info for the map statistics map record messages
const messageBestMapRecordWeaponConsole (concat (c $colorRecordInfo) "with %1");

// Template for the team info for the map statistics map record messages
const messageBestMapRecordTeamNameConsole (concat (c $colorRecordInfo) "in team %1");

// Template for timestamp info strings for the map statistics map record messages
const messageBestMapRecordTimestampConsole (concatword (c $colorRecordInfo) "(Created on %1" (c $colorRecordInfo) ")");

// Template for timestamps that are shown only as dates for the map statistics map record messages
const messageBestMapRecordTimestampDateConsole (format $messageBestMapRecordTimestampConsole "%1");

// Template for timestamps that are shown as date and time for the map statistics map record messages
const messageBestMapRecordTimestampDateAndTimeConsole (format $messageBestMapRecordTimestampConsole (concat "%1" (c $colorRecordInfo) "at %2"));

// Template for the "Missing weapons" map statistics message
const messageMissingWeapons (concat (c $colorMissingWeapons) "Missing weapons : %1");

// List separator for the "Missing weapons" weapon list
const messageMissingWeaponsListSeparator (format $stringOutputListCommaSeparatorTemplate "");

// List separator for the last item of the "Missing weapons" weapon list
const messageMissingWeaponsListLastSeparator (format $stringOutputListAndSeparatorTemplate "");

// Template for the "No records on this map" map statistics message
const messageNoMapRecords (concat (c $colorNoRecord) "You don't have any records on this map");

// Template for map records in the "Weapon Records" menu
const weaponMapRecordMenuText (concatword "%1%2" (c $colorWeaponMapRecordDefault) ": %3");

// Template for additional infos for a map record in the menus
const menuItemMapRecordAdditionalInfos (concatword (c $colorRecordInfo) " (%1" (c $colorRecordInfo) ")");

// List separator for the additional infos list
const menuItemMapRecordAdditionalInfosSeparator (format $stringOutputListCommaSeparatorTemplate (c $colorRecordInfo));


// map-revision-storage

// Template for the "Updated current map revision" message
const messageUpdatedCurrentMapRevision (concatword (c $colorInfo) "Updated current map revision for map " (c $colorMapName) "%1" (c $colorInfo) " to " (c $colorMapRevision) "%2");


// map-record-migrator

// Template for the "Auto migrated map records to current version" message
const messageAutoMigratedMapRecords (concatword (c $colorInfo) "Auto migrated map records from revision " (c $colorMapRevision) "%1" (c $colorInfo) " to " (c $colorMapRevision) "%2");


// score-attempt

// The "Score attempt aborted because of edit mode" info message
const messageAttemptAbortedEditMode (concat (c $colorScoreAttemptAborted) "Score attempt aborted because you switched to edit mode!");


// score-weapon-updater

// Template for "Knife/Pistol only mode aborted" info messages
const messageSecondaryWeaponModeAborted (concat (c $colorWeapon) "%1" (c $colorWarning) "mode aborted! But you can still finish with" (c $colorWeapon) "%2");


// time

// time-unit-name-fetcher

// Abbreviated name of the "minutes" time unit
const timeUnitNameMinutesAbbreviated "m";

// Full name of the "minutes" time unit
const timeUnitNameMinutesFull "minutes";

// Abbreviated name of the "seconds" time unit
const timeUnitNameSecondsAbbreviated "s";

// Full name of the "seconds" time unit
const timeUnitNameSecondsFull "seconds";

// Abbreviated name of the "milliseconds" time unit
const timeUnitNameMillisecondsAbbreviated "ms";

// Full name of the "milliseconds" time unit
const timeUnitNameMillisecondsFull "milliseconds";


// time-interval-array

// Template for "Time interval part must be greater/smaller than x" error messages
const messageInvalidTimeIntervalPart "The %1 part of a time interval must be %2 than %3";

// The "Time interval minutes part must be greater than -1" error message
const messageTimeIntervalMinutesTooLow (format $messageInvalidTimeIntervalPart "minutes" "greater" "-1");

// The "Time interval minutes part must be smaller than 35792" error message
const messageTimeIntervalMinutesTooHigh (format $messageInvalidTimeIntervalPart "minutes" "smaller" "35792");

// The "Time interval seconds part must be greater than -1" error message
const messageTimeIntervalSecondsTooLow (format $messageInvalidTimeIntervalPart "seconds" "greater" "-1");

// The "Time interval seconds part must be smaller than 60" error message
const messageTimeIntervalSecondsTooHigh (format $messageInvalidTimeIntervalPart "seconds" "smaller" "60");

// The "Time interval milliseconds part must be greater than -1" error message
const messageTimeIntervalMillisecondsTooLow (format $messageInvalidTimeIntervalPart "milliseconds" "greater" "-1");

// The "Time interval milliseconds part must be smaller than 1000" error message
const messageTimeIntervalMillisecondsTooHigh (format $messageInvalidTimeIntervalPart "milliseconds" "smaller" "1000");

// The "Time interval difference is too low" error message
const messageTimeIntervalDifferenceTooLow "The total milliseconds of a time interval must be greater than -2147483648 (Time Difference is %1 milliseconds too low)";

// The "Time interval difference is too high" error message
const messageTimeIntervalDifferenceTooHigh "The total milliseconds of a time interval must be smaller than 2147483648 (Time Difference is %1 milliseconds too high)";


// time-target

// Template for "Time target can not be changed" error messages
const messageTimeTargetCanNotBeSet (concat (c $colorError) "Cannot change the time target: %1");

// The "Time target must be at least 0 milliseconds" message for "setTimeTargetTotalMilliseconds"
const messageTimeTargetMustBeAtLeastZeroMilliseconds "The time target must be at least 0 milliseconds";


// time-target-mode

// The "Gema mode not active" reason for "getTimeTargetModeCanNotBeActivatedReason"
const messageGemaModeNotActive "Gema mode is not activated";

// The "Time target must be at least 0 milliseconds" reason for "getTimeTargetModeCanNotBeActivatedReason"
const messageInvalidTimeTarget "The time target must be at least 0 milliseconds";

// Template for "Time target mode can not be enabled" error messages
const messageTimeTargetModeCanNotBeEnabled (concat (c $colorError) "Can not enable the time target mode: %1.");

// Template for "Time target mode can not be disabled" error messages
const messageTimeTargetModeCanNotBeDisabled (concat (c $colorError) "Can not disable the time target mode: %1.");


// The "Faster than time target" info message without difference to the time target
const messageTimeTargetBeaten (concat (c $colorTimeTargetBeaten) "You were faster than your time target");

// The "Tied time target" info message without difference to the time target
const messageTimeTargetTied (concat (c $colorTimeTargetTied) "Tied your time target");

// The "Slower than time target" info message without difference to the time target
const messageSlowerThanTimeTarget (concat (c $colorTimeTargetNotBeaten) "You were slower than your time target");

// The "Time target finished" info message
const messageTimeTargetFinished "Time target finished";


// Template for "Faster than time target" info messages with difference to the time target
const messageTimeTargetBeatenWithDifference (concat (c $colorTimeTargetBeaten) "Time target beaten by %1");

// Template for "Slower than time target" info messages with difference to the time target
const messageSlowerThanTimeTargetWithDifference (concat "%1" (c $colorTimeTargetNotBeaten) "slower than time target");


// time-target-auto-updater

// Template for "Auto setting time target to record with weapon" messages
const messageAutoSetTimeTargetToScoreWeaponRecord (concat (c $colorTimeTargetInfo) "Setting time target to best record with" (c $colorWeapon) "%1");


// count-down

// The "Time target mode not activated" reason for "getCountdownModeCanNotBeActivatedReason"
const messageTimeTargetModeNotActive "Time target mode is not activated";

// Template for "Countdown mode can not be enabled" error messages
const messageCountdownModeCanNotBeEnabled (concat (c $colorError) "Can not enable countdown mode: %1.");

// Template for "Countdown mode can not be disabled" error messages
const messageCountdownModeCanNotBeDisabled (concat (c $colorError) "Can not disable countdown mode: %1.");

// Template for the "countdown finished" message
const messageCountdownFinishMessage (concat (c $colorCountdownFinished) "%1");


// team name-fetcher

// Template for unknown team ids
const teamNameUnknown "Unknown team ID (%1)";

// The team name for the team CLA
const teamNameCLA "CLA";

// The team name for the team RVSF
const teamNameRVSF "RVSF";


// weapon-name-fetcher

// Template for unknown weapon ids
const weaponNameUnknown "Unknown weapon ID (%1)";

// The weapon name for the weapon "Knife"
const weaponNameKnife "Knife Only";

// The weapon name for the weapon "Pistol"
const weaponNamePistol "Pistol Only";

// The weapon name for the weapon "Carbine"
const weaponNameCarbine "Carbine";

// The weapon name for the weapon "Shotgun"
const weaponNameShotgun "Shotgun";

// The weapon name for the weapon "Submachine Gun"
const weaponNameSubmachineGun "Submachine Gun";

// The weapon name for the weapon "Sniper Rifle"
const weaponNameSniperRifle "Sniper Rifle";

// The weapon name for the weapon "Assault Rifle"
const weaponNameAssaultRifle "Assault Rifle";


// Menus

// Menu titles

// The title of the "Gema Mode" menu
const menuGemaModeTitle (concatword (c $colorGemaModeMenuTitle) "Gema Mode" (c $colorMenuDefault));

// Template for "Gema Mode" sub menus
const gemaModeSubMenuTitleTemplate (concatword $menuGemaModeTitle (c $colorMenuDefault) " - %1" (c $colorMenuDefault));

// The title of the "Delete Record(s)" dialog
const dialogDeleteRecordTitle (format $gemaModeSubMenuTitleTemplate (concatword (c $colorDeleteRecordTitle) "Delete record"));

// The title of the "Migrate Records" dialog
const dialogMigrateRecordsTitle (format $gemaModeSubMenuTitleTemplate (concatword (c $colorMigrateRecordsTitle) "Migrate records"));

// The title of the "Change Language" dialog
const dialogChangeLanguageTitle (format $gemaModeSubMenuTitleTemplate (concatword (c $colorLanguage) "Change Language"));

// The title of the "Maps" menu
const menuMapsTitle (format $gemaModeSubMenuTitleTemplate (concatword (c $colorMapName) "Maps"));

// The title of the "Time Target" menu
const menuTimeTargetTitle (format $gemaModeSubMenuTitleTemplate (concatword (c $colorTimeTargetTitle) "Time target"));

// The title of the "Options" menu
const menuOptionsTitle (format $gemaModeSubMenuTitleTemplate (concatword (c $colorOptionsTitle) "Options"));

// The title of the "Map Records" menu
const menuShowRecordsTitle (format $gemaModeSubMenuTitleTemplate (concatword (c $colorMapRecordsTitle) "Map records"));

// The title of the "About" menu
const menuAboutTitle (format $gemaModeSubMenuTitleTemplate (concatword (c $colorAboutTitle) "About"));


// General

// The text for the "Back" menu item
const menuItemGoBackText (concat (c $colorClose) "Back")


// Main Menu

// The text for the "Enable gema mode" menu item
const menuItemEnableGemaModeText (concat (c $colorEnableGemaMode) "Enable gema mode");


// Title for the "Current Map" menu item
const menuItemCurrentMapTitle "Map";

// Template for the "Current Map" menu item
const menuItemCurrentMap (concatword (c $colorRecordInfoTitle) $menuItemCurrentMapTitle "%1: " (c $colorMapName) "%2" (c $colorMapInfo) " (revision " (c $colorMapRevision) "%3" (c $colorMapInfo) ")");


// Title for the "Best Time" menu item
const menuItemBestMapRecordTitle "Best Time"

// Template for the "Best Time" menu item
const menuItemBestMapRecord (concatword (c $colorRecordInfoTitle) $menuItemBestMapRecordTitle "%1: %2");


// Title for the "Time Target" menu item
const menuItemCurrentTimeTargetTitle "Time Target";

// Template for the "Time Target" menu item
const menuItemCurrentTimeTarget (concatword (c $colorRecordInfoTitle) $menuItemCurrentTimeTargetTitle "%1: %2");


// The text for the "Options" menu item
const menuItemOptions (concat (c $colorOptionsTitle) "Options");

// The text for the "About" menu item
const menuItemAbout (concat (c $colorAboutTitle) "About");

// The text for the "Close" menu item
const menuItemCloseMenu (concat (c $colorClose) "Close");


// Weapon records menu

// The title for the "Map name" menu item
const menuItemCurrentMapNameTitle "Map";

// The text for the "Map name" menu item
const menuItemCurrentMapName (concatword (c $colorRecordInfoTitle) $menuItemCurrentMapNameTitle "%1: " (c $colorMapName) "%2");

// The title for the map revision slider text
const menuItemCurrentMapRevisionSliderTitle "Revision";

// The text for the map revision slider
const menuItemCurrentMapRevisionSliderText (concatword (c $colorRecordInfoTitle) $menuItemCurrentMapRevisionSliderTitle "%1: ");

// The text for the "Migrate records" menu item if the current selected revision is the current revision of the map
const menuItemMigrateRecordsFromOtherRevisions (concatword (c $colorMigrateRecordsTitle) "Migrate records from other revisions"));

// The text for the "Migrate records" menu item if the current selected revision is not the current revision of the map
const menuItemMigrateRecordsToCurrentRevision (concatword (c $colorMigrateRecordsTitle) "Migrate records to current revision"));

// The text for the "Delete records for revision" menu item
const menuItemDeleteRecordsForRevision (concatword (c $colorDeleteRecordTitle) "Delete records for revision");


// Migrate Records Menu

// Template for the "Migrate records" dialog confirmation question
const menuItemMigrateRecordsConfirmQuestionTemplate (concatword (c $colorMigrateRecordsText) "Migrate faster records from %1 " (c $colorMigrateRecordsText) "to revision " (c $colorMapRevision) "%2" (c $colorMigrateRecordsText) " (current)?");

// The confirm question for the "Migrate records" menu if the records of a single revision should be migrated
const menuItemMigrateSingleRevisionRecordsConfirmQuestion (format $menuItemMigrateRecordsConfirmQuestionTemplate (concatword (c $colorMapName) "%1" (c $colorMigrateRecordsText) " revision " (c $colorMapRevision) "%2") "%3");

// The confirm question for the "Migrate records" menu if the records of multiple revisions should be migrated at once
const menuItemMigrateMultipleRevisionsRecordsConfirmQuestion (format $menuItemMigrateRecordsConfirmQuestionTemplate (concatword "the following " (c $colorMapName) "%1" (c $colorMigrateRecordsText) " revisions") "%2");

// The yes answer for the "Migrate records" menu
const menuItemMigrateRecordsConfirm (concatword (c $colorMigrateRecordsOptionYes) "Yes, migrate the records");

// The no answer for the "Migrate records" menu
const menuItemMigrateRecordsCancel (concatword (c $colorMigrateRecordsOptionNo) "No, don't migrate the records");


// The "Select at least one map revision" error message for the "Migrate Records" dialog
const messageSelectAtLeastOneMapRevisionToMigrate (concatword (c $colorError) "Select at least one revision to migrate records from");

// Template for the success message for the "Migrate Records" confirm action
const messageRecordsMigratedTemplate (concatword (c $colorSuccess) "Migrated records from " (c $colorMapName) "%1" (c $colorSuccess) " revision%2 %3" (c $colorSuccess) " to " (c $colorMapRevision) "%4");

// The success message for the "Migrate records" confirm action if the records of a single revision were migrated
const messageRecordsMigratedSingle (format $messageRecordsMigratedTemplate "%1" "" (concatword (c $colorMapRevision) "%2") "%3");

// The success message for the "Migrate records" confirm action if the records of multiple revisions were migrated
const messageRecordsMigratedMultiple (format $messageRecordsMigratedTemplate "%1" "s" "%2" "%3");

// The list separator for the migrated revisions list in the "Records migrated" success messages
const messageRecordsMigratedRevisionListSeparator (format $stringOutputListCommaSeparatorTemplate (c $colorSuccess));

// The list separator for the last item of the migrated revisions list in the "Records migrated" success messages
const messageRecordsMigratedRevisionListLastSeparator (format $stringOutputListAndSeparatorTemplate (c $colorSuccess));


// Delete Record Menu

// Template for the "Delete Record(s)" confirm question
const menuItemDeleteRecordsConfirmQuestionTemplate (concatword (c $colorDeleteRecordText) "Delete %1 for " (c $colorMapName) "%2" (c $colorDeleteRecordText) "?");

// The "Delete all records for map" confirm question
const menuItemDeleteAllRecordsOfMapConfirmQuestion (format $menuItemDeleteRecordsConfirmQuestionTemplate "all records" "%1");

// The "Delete all records for map revision" confirm question
const menuItemDeleteAllRecordsOfMapRevisionConfirmQuestion (format $menuItemDeleteRecordsConfirmQuestionTemplate "all records" (concatword "%1" (c $colorDeleteRecordText) " revision " (c $colorMapRevision) "%2"));

// The "Delete weapon record" confirm question
const menuItemDeleteWeaponRecordConfirmQuestion (format $menuItemDeleteRecordsConfirmQuestionTemplate "record" (concatword "%1" (c $colorDeleteRecordText) " with " (c $colorWeapon) "%2"));


// Template for the "Delete Record(s)" yes answer
const menuItemDeleteRecordConfirmTemplate (concat (c $colorDeleteRecordOptionYes) "Yes, delete the record%1");

// The "Delete single weapon record" yes answer
const menuItemDeleteSingleWeaponRecordConfirm (format $menuItemDeleteRecordConfirmTemplate);

// The "Delete multiple weapon records" yes answer
const menuItemDeleteMultipleWeaponRecordsConfirm (format $menuItemDeleteRecordConfirmTemplate "s");


// Template for the "Delete Record(s)" no answer
const menuItemDeleteRecordCancelTemplate (concat (c $colorDeleteRecordOptionNo) "No, don't delete the record%1");

// The "Delete single weapon record" no answer
const menuItemDeleteSingleWeaponRecordCancel (format $menuItemDeleteRecordCancelTemplate);

// The "Delete multiple records" no answer
const menuItemDeleteMultipleRecordsCancel (format $menuItemDeleteRecordCancelTemplate "s");


// Options Menu

// The text for the "General Options" menu item
const menuItemGeneralOptionsTitle (concat (c $colorOptionsTitle) "General:");

// The text for the "Auto activated gema mode" option menu item
const menuItemAutoActivateGemaModeOption (concat (c $colorGeneralOption) "Auto activate gema mode");

// The text for the "Show notifications" option menu item
const menuItemShowNotificationsOption (concat (c $colorGeneralOption) "Show notifications");

// The text for the "Compare score times to" option menu item
const menuItemScoreTimeCompareValueOption (concat (c $colorGeneralOption) "Compare score times to: ");

// The possible values for the "Compare score times to" option
const menuItemScoreTimeCompareValueOptionValues [ "best map record" "best score weapon record" ];

// The text for the "Show player name on score" option menu item
const menuItemShowNameOnScoreOption (concat (c $colorGeneralOption) "Show player name");

// The text for the "Auto migrate map records" option menu item
const menuItemAutoMigrateMapRecordsOnRevisionUpdateOption (concat (c $colorGeneralOption) "Auto migrate map records on revision update");


// The text for the "Show weapon name" option menu item
const menuItemShowScoreWeaponOption (concat (c $colorGeneralOption) "Show score weapon");

// The text for the "Show score team" option menu item
const menuItemShowTeamOption (concat (c $colorGeneralOption) "Show score team: ");

// The possible values for the "Show score team" option
const menuItemShowTeamOptionValues [ "disabled" "in player name color" "in score time color" "in weapon name color" "in timestamp color" "as additional info" ];

// The text for the "Show map record timestamps" option
const menuItemShowMapRecordTimestampOption (concat (c $colorGeneralOption) "Show map record timestamps");

// The text for the "Show map record timestamp time parts" option
const menuItemShowMapRecordTimestampTimePartOption (concat (c $colorGeneralOption) "Show time part of map record timestamps");

// The text for the "Show difference to score compare time on score" option menu item
const menuItemShowDifferenceToScoreCompareTimeOption (concat (c $colorGeneralOption) "Show difference to compare time when scoring");


// The text for the "Time Target options" menu item
const menuItemTimeTargetOptionsTitle (concat (c $colorOptionsTitle) "Time target:");

// The text for the "Auto set time target mode" option menu item
const menuItemAutoSetTimeTargetModeOption (concat (c $colorTimeTargetOption) "Auto set time target to: ");

// The possible values for the "Auto set time target mode" option
const menuItemAutoSetTimeTargetModeValues [ "disabled" "best map record" "best primary weapon record" "best score weapon record" ];

// The text for the "Show difference to time target on score" option menu item
const menuItemShowDifferenceToTimeTargetOption (concat (c $colorTimeTargetOption) "Show difference to time target when scoring");

// The text for the "Auto reset time target on quit" option menu item
const menuItemResetTimeTargetOnQuitOption (concat (c $colorTimeTargetOption) "Auto set time target to 0 on quit");


// The text for the "Weapon options" menu item
const menuItemWeaponOptionsTitle (concat (c $colorOptionsTitle) "Weapons:");

// The text for the "Enable weapon records menu" option menu item
const menuItemEnableWeaponRecordsMenuOption (concat (c $colorWeapon) "Enable weapon records menu");

// The text for the "Show Knife/Pistol mode aborted messages" option menu item
const menuItemShowSecondaryWeaponModeAbortedMessagesOption (concat (c $colorWeapon) "Show Knife/Pistol mode abort messages");

// The text for the "Show missing weapons" option menu item
const menuItemShowMissingWeaponsOption (concat (c $colorWeapon) "Show missing weapons on map start");


// The text for the "Miscellaneous options" menu item
const menuItemMiscellaneousOptionsTitle (concat (c $colorOptionsTitle) "Miscellaneous:");

// The text for the "Menu Font" option menu item
const menuItemMenuFontOption (concat (c $colorMiscellaneousOption) "Menu Font: ");

// The text for the "About menu width" option menu item
const menuItemMenuAboutMaximumLineWidthOption (concat (c $colorMiscellaneousOption) "About menu width: ");

// The text for the "Change Language" option menu item
const menuItemChangeLanguageOption (concat (c $colorMiscellaneousOption) "Change Language ...");


// Time Target Menu

// The text for the "Enable time target mode" menu item
const menuItemEnableTimeTargetMode (concat (c $colorTimeTargetEnable) "Enable Time Target Mode");

// The text for the "Show countdown" menu item
const menuItemShowCountdown (concat (c $colorCountdownEnable) "Show countdown");

// The text for the "Time target Minutes" menu item
const menuItemTimeTargetMinutes (concat (c $colorTimeTargetTimeUnits) "Minutes");

// The text for the "Time target Seconds" menu item
const menuItemTimeTargetSeconds (concat (c $colorTimeTargetTimeUnits) "Seconds");

// The text for the "Time target Milliseconds" menu item.
// The extra space at the end is intended to add a margin between the word and the text input field
const menuItemTimeTargetMilliseconds (concat (c $colorTimeTargetTimeUnits) "Milliseconds" " ");


// Change Language Dialog

// The list of full names of the available languages
// The index inside this list matches the index inside the $availableLanguages list
const availableLanguagesFullNames [ English German ];

// The "Selected language is current language" warning message
const messageSelectedLanguageIsCurrentLanguage (concat (c $colorWarning) "Could not change language: Selected language is current language");

// The "Successfully changed language" message
const messageSuccessfullyChangedLanguage (concatword (c $colorSuccess) "Successfully changed language to " (c $colorLanguage) "%1");

// The "Failed to change language" message
const messageFailedToChangeLanguage (concatword (c $colorError) "Failed to change language to " (c $colorLanguage) "%1");


// About Menu

// The prefix for all header lines in the about menu
const menuAboutHeaderPrefix (c $colorAboutHeader);

// The prefix for all paragraph lines in the about menu
const menuAboutParagraphPrefix (concatword (c $colorAboutParagraph) " ");

// The header for the "What is gema" section in the about menu
const menuAboutGemaDescriptionHeader "What is gema?";

// The text for the "What is gema" section in the about menu
const menuAboutGemaDescriptionText [
  Gema is a game mode that is based on CTF. <PARAGRAPH_END>
  Gema maps are obstacle courses, your goal is to reach the flags and to score as fast as possible.
]

// The header for the "Gema rules" section in the about menu
const menuAboutGemaRulesHeader "What are the gema rules?";

// The text for the "Gema rules" section in the about menu
const menuAboutGemaRulesText [
  1. No kills
];

// The header for the "About ac-gema-mode" section in the about menu
const menuAboutAcGemaModeHeader "About ac-gema-mode";

// The "Version" info line in the "About ac-gema-mode" section in the about menu
const menuAboutAcGemaModeVersionInfoText "Version: %1";

// The "Author" info line in the "About ac-gema-mode" section in the about menu if there is only one author
const menuAboutAcGemaModeSingleAuthorInfoText "Author: %1";

// The "Author" info line in the "About ac-gema-mode" section in the about menu if there are multiple authors
const menuAboutAcGemaModeMultipleAuthorsInfoText "Authors: %1";

// List separator for the authors list in the about menu
const menuAboutAcGemaModeAuthorsListSeparator (format $stringOutputListCommaSeparatorTemplate "");

// List separator for the last item of the authors list in the about menu
const menuAboutAcGemaModeAuthorsListLastSeparator (format $stringOutputListAndSeparatorTemplate "");
