//
// @author wesen
// @copyright 2017 wesen <wesen-ac@web.de>
//

//
// Time parser module for ac-gema-mode
//
// Converts milliseconds to an array in the format [ <minutes> <seconds> <milliSeconds> ]
//

persistidents 0;

//
// Converts milliseconds to an array in the format [ <minutes> <seconds> <milliSeconds> ].
//
// @param int $arg1 The time in milliseconds
//
// @return array The minutes, seconds and milliseconds part
//
const timeParserConvertMilliSeconds [

  timeParserMilliSeconds = (mod $arg1 1000);
  timeParserTotalSeconds = (div $arg1 1000);

  timeParserMinutes = (div $timeParserTotalSeconds 60);
  timeParserSeconds = (mod $timeParserTotalSeconds 60);

  return (concat $timeParserMinutes $timeParserSeconds $timeParserMilliSeconds);

]

//
// Adds leading zeros to a number and returns the string.
//
// @param int $arg1 The number
// @param int $arg2 The amount of digits that the number must have
//
// @return String The number with leading zeros
//
const addLeadingZerosToNumber [

  numberWithZeros = $arg1;

  loop i (- $arg2 (strlen $arg1)) [
    numberWithZeros = (concatword "0" $numberWithZeros);
  ]

  return $numberWithZeros;

]

//
// Generates and returns a time string in the format <minutes>:<seconds>:<milliseconds> from a time in milliseconds.
//
// @param int $arg1 The time in milliseconds
//
// @return String The time string
//
const generateTimeString [

  timeArray = (timeParserConvertMilliSeconds $arg1);

  // Add leading 0s
  minutesString = (addLeadingZerosToNumber (at $timeArray 0) 2);
  secondsString = (addLeadingZerosToNumber (at $timeArray 1) 2);
  milliSecondsString = (addLeadingZerosToNumber (at $timeArray 2) 3);

  // Return the time string
  return (concatword $minutesString ":" $secondsString "," $milliSecondsString);

]

