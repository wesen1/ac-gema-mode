//
// @author wesen
// @copyright 2019 wesen <wesen-ac@web.de>
//

// Global variables

docident "countDownModeIsActive" "Stores whether the count down mode is currently active";
docident "countDownIsActive" "Defines whether a countdown is currently running";
docident "countDownSeconds" "The initial number of seconds of the current countdown";
docident "lastCountDownChangeTimeStamp" "The timestamp of the last countdown change";


// Functions

docident "setCountDownModeState" "Sets the countdown mode state (Enables/Disables the count down mode)";
docargument "S" "The new countdown mode state" "0,1" "0";
docexample "setCountDownModeState 1" "Activates the countdown mode";

docident "isCountDownModeActive" "Returns whether the countdown mode is currently active";
docremark "0: Countdown mode is not active";
docremark "1: Countdown mode is active";

docident "abortCountDown" "Aborts the current count down";

docident "isCountDownActive" "Returns whether there is a countdown running at the moment";

docident "initializeCountDown" "Shows a countdown in seconds in the console";
docargument "L" "The length of the countdown in milliseconds" "" 1;
docargument "M" "The message to show when the countdown is finished" "" 1;
docexample "initializeCountDown 10000 hello" "Show a 10 seconds countdown and prints 'hello' when the countdown reaches 0 seconds";

docident "getCountDownModeCanNotBeActivatedReason" "Returns the reason why the countdown mode can not be activated";
docremark "Returns an empty string if the countdown mode can be activated";

docident "showCountDown" "Counts down a second and displays the seconds remaining";
docargument "S" "The number of remaining seconds" "" 1;
docargument "M" "The message to show when the countdown is finished" "" 1;
docexample "showCountDown 10 hello" "Shows '00:10' and then calls itself again with the arguments '9 hello'";
docexample "showCountDown 0 hello" "Shows the message 'hello'";

docident "isValidShowCountDownCall" "Returns whether a showCountDown function call is valid";
docargument "S" "The number of remaining seconds" "" 1;

docident "getCountDownColor" "Returns the countdown color based on the amount of seconds remaining";
docargument "S" "The number of remaining seconds" "" 1;
docexample "getCountDownColor 14" "Returns $countDownColorDefault";
docexample "getCountDownColor 8" "Returns $countDownColorLessThanTenSecondsRemaining";
docexample "getCountDownColor 2" "Returns $countDownColorLessThanFourSecondsRemaining";
