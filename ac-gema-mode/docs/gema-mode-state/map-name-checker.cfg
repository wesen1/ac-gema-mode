//
// @author wesen
// @copyright 2019 wesen <wesen-ac@web.de>
//

// Constants

docident "gemaMapNameImplicits" "Static list of implicit words that will cause a map name to be identified as a gema map name";
docremark "Default words: jigsaw, deadmeat-10";

docident "gemaMapNameCodes" "Static list of letters of which one per code position must occur in sequence to cause a map name to be identified as a gema map name.";
docremark "Default letters: g, 3e, m, a@4";

docident "cachedMapName" "Stores the last checked map name of the isGemaMapName function";
docident "isCachedMapNameGemaMapName" "Stores the result of the isGemaMapName call for the last checked map name";
docremark "This is done to avoid checking one map name multiple times";


// Functions

docident "isGemaMapName" "Returns whether a map name is a gema map name";
docargument "M" "The map name" "" 1;
docremark "0: The map name is not a gema map name";
docremark "1: The map name is a gema map name";

docident "containsGemaMapNameImplicit" "Checks whether a map name contains one of the implicit words";
docargument "M" "The map name" "" 1;
docremark "0: The map name does not contain any of the implicit words";
docremark "1: The map name contains one of the implicit words";
docexample "containsGemaMapNameImplicit jigsaw-map-1" "Will return 1 because 'jigsaw-map-1' contains the implicit word 'jigsaw'";
docexample "containsGemaMapNameImplicit ac_douze" "Will return 0 because 'ac_douze' does not contain any of the implicit words";

docident "containsGemaMapNameCodes" "Checks whether a map name contains ge3ma@4";
docargument "M" "The map name" "" 1;
docremark "0: The map name does not contain ge3ma@4";
docremark "1: The map name contains ge3ma@4";
docexample "containsGemaMapNameCodes gema_warm_up" "Will return 4 because 'gema_warm_up' contains the word 'gema'";
docexample "containsGemaMapNameCodes ac_douze" "Will return 0 because 'ac_douze' does not contain ge3ma@4";

docident "letterMatchesGemaMapNameCode" "Returns whether a letter matches a specific position of the gema map name codes";
docargument "L" "The letter" "" 0;
docargument "P" "The gema map name code position" "" 1;
docremark "0: The letter does not match the map name code position";
docremark "1: The letter matches the map name code position";
docexample "letterMatchesGemaMapNameCode a 2" "Will return 0 because 'a' does not match 'm'";
docexample "letterMatchesGemaMapNameCode a 3" "Will return 1 because 'a' matches 'a@4';
