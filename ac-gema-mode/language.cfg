//
// @author wesen
// @copyright 2020 wesen <wesen-ac@web.de>
//

//
// Language module for ac-gema-mode
//
// Provides functions to load the strings for specific languages.
//
// Requires:
//   * scripts/ac-gema-mode/custom-declarations.cfg
//   * scripts/ac-gema-mode/strings
//   * scripts/ac-gema-mode/unpersist/declarations.cfg
//   * scripts/ac-gema-mode/util/value-persistor.cfg
//

// Options

//
// The language that should be used for ac-gema-mode
// This is one of the values of the $availableLanguages list
//
// @var string $optionGemaModeLanguage
//
option optionGemaModeLanguage 0;

persistidents 0;


// Constants

//
// The available languages
// The items in this list match the values after the underscore in the "ac-gema-mode/strings/strings_*.cfg" file names
//
// @var string[] $availableLanguages
//
const availableLanguages [ en de ];


// Public Functions

//
// Returns the current language that ac-gema-mode should use.
//
// @return string The language identifier (One of the values of the $availableLanguages list)
//
function getCurrentLanguage [

  if (= (findlist $availableLanguages $optionGemaModeLanguage) -1) [
    return "en";
  ][
    return $optionGemaModeLanguage;
  ]

]

//
// Sets the current gema mode language and reloads all strings.
//
// @param string newGemaModeLanguage ($arg1) The new gema mode language (One of the values of the $availableLanguages list)
//
// @return int 1 if the language option was changed, 0 otherwise
//
function setOptionLanguage [

  languageIdentifier = $arg1;
  if (! (strcmp $optionGemaModeLanguage $languageIdentifier)) [
    setPersistentValue optionGemaModeLanguage $arg1;
    loadStrings (getCurrentLanguage) 1;
    return 1;
  ][
    return 0;
  ]

]

//
// Loads all strings for the current language.
//
function initializeLanguage [
  loadStrings (getCurrentLanguage) 0;
]

//
// Returns the language identifiers of all available languages.
//
// @return string[] The language identifiers of all available languages
//
function getAvailableLanguages [
  return $availableLanguages;
]

//
// Returns the full name for a given language identifier.
//
// @param string languageIdentifier ($arg1) The language identifier
//
// @return string The full name for the given language identifier
//
function languageIdentifierToFullLanguageName [
  languageIndex = (findlist $availableLanguages $arg1);
  if (= $languageIndex -1) [
    languageIndex = (findlist $availableLanguages "en");
  ][
    return (at $availableLanguagesFullNames $languageIndex);
  ]
]


// Private Functions

//
// Loads all strings for a given language.
//
// @param string languageIdentifier ($arg1) The language to load (One of the values of the $availableLanguages list)
// @param int deleteOldLanguageStrings ($arg2) 1 to delete existing strings, 0 otherwise
//
function loadStrings [

  languageIdentifier = $arg1;
  deleteOldLanguageStrings = $arg2;

  if ($deleteOldLanguageStrings) [
    // Delete all menus so that they are rebuilt the next time they are opened
    deleteAllBuiltMenus;
    invalidateMenuFormatCache;

    // Delete all string variables to be able to replace them by the string variables from a different strings.cfg file
    deleteAllStrings;
  ]

  exec (format "scripts/ac-gema-mode/strings/strings_%1.cfg" $languageIdentifier);

]
