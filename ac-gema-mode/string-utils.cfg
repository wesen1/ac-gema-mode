//
// @author wesen
// @copyright 2018 wesen <wesen-ac@web.de>
//

//
// String utils module for ac-gema-mode
//
// Provides various string util functions
//

//
// Replaces a part of a string with a sub string.
//
// @param String $arg1 The string
// @param String $arg2 The replacement string
// @param int $arg3 The start position
// @param int $arg4 The end position (optional)
//
// @return String The modified string
//
const substr_replace [

  substrreplace_initialString = $arg1;
  substrreplace_replacementString = $arg2;

  substrreplace_startPosition = $arg3;
  substrreplace_initialStringLength = (strlen $substrreplace_initialString);

  // Calculate end position
  if (> $numargs 3) [
    if (< $arg4 0) [
      substrreplace_endPosition = (+ $substrreplace_initialStringLength $arg4);
    ][
      substrreplace_endPosition = $arg4;
    ]
  ][
    substrreplace_endPosition = $substrreplace_initialStringLength;
  ]

  if (< $substrreplace_startPosition $substrreplace_endPosition) [

    if (<= $substrreplace_startPosition 0) [
      substrreplace_leftPart = "";
    ][
      substrreplace_leftPart = (substr $substrreplace_initialString 0 $substrreplace_startPosition);
    ]

    if (>= $substrreplace_endPosition $substrreplace_initialStringLength) [
      substrreplace_rightPart = "";
    ][
      substrreplace_rightPart = (substr $substrreplace_initialString (+ $substrreplace_endPosition 1));
    ]

    return (concatword $substrreplace_leftPart $substrreplace_replacementString $substrreplace_rightPart);

  ][
    return $substrreplace_initialString;
  ]

]

//
// Returns a string repeated x times.
//
// @param String $arg1 The string that will be repeated
// @param int $arg2 The number of repeats
//
// @return String The repeated string
//
const strrepeat [

  strrepeat_repeatString = $arg1;
  strrepeat_numberOfRepeats = $arg2;

  strrepeat_resultString = "";
  loop i $strrepeat_numberOfRepeats [
    strrepeat_resultString = (concatword $strrepeat_resultString $strrepeat_repeatString);
  ]

  return $strrepeat_resultString;

]

//
// Counts the number of occurrences of a substring inside a string.
//
// @param String $arg1 The haystack
// @param String $arg2 The needle
//
const substr_count [

  substrcount_haystack = $arg1;
  substrcount_needle = $arg2;
  substrcount_needleLength = (strlen $substrcount_needle);

  substrcount_needlePosition = (strpos $substrcount_haystack $substrcount_needle);
  if (!= $substrcount_needlePosition -1) [
    substrcount_remainingString = (substr $substrcount_haystack (+ $substrcount_needlePosition $substrcount_needleLength));
    return (+ 1 (substr_count $substrcount_remainingString $substrcount_needle));

  ][
    return 0;
  ]
]
