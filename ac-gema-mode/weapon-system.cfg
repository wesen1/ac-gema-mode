//
// @author wesen
// @copyright 2018 wesen <wesen-ac@web.de>
//

//
// Weapon system module for ac-gema-mode
//
// Provides functions that are necessary for the weapon system
//


check2init optionShowWeaponModeNotifications 0;

//
// If set to 1 the score weapon name will be printed when the player scores
//
// @var int $optionShowScoreWeapon
//
check2init optionShowScoreWeapon 1;


persistidents 0;

//
// The weapon ids in the priority order for menus, missing weapons string and get best map record weapon id
//
// @var int[] $acGemaModeWeaponIds
//
const acGemaModeWeaponIds (concat $AR $SMG $SNIPER $SHOTGUN $CARBINE $PISTOL $KNIFE);


//
// Returns the weapon name from a weapon id.
//
// @param int $arg1 The weapon id
//
// @return String The weapon name
//
const getWeaponName [

  weaponName = (concatword "Unknown weapon ID (" $arg1 ")");

  if (= $arg1 $KNIFE) [ weaponName = "Knife Only" ];
  if (= $arg1 $PISTOL) [ weaponName = "Pistol Only" ];
  if (= $arg1 $CARBINE) [ weaponName = "Carbine" ];
  if (= $arg1 $SHOTGUN) [ weaponName = "Shotgun" ];
  if (= $arg1 $SMG) [ weaponName = "Submachine Gun" ];
  if (= $arg1 $SNIPER) [ weaponName = "Sniper Rifle" ];
  if (= $arg1 $AR) [ weaponName = "Assault Rifle" ];

  return $weaponName;

]

//
// Checks whether a weapon used aborts knife only or pistol only mode.
//
// @param int $arg1 The id of the weapon that was used
// @param int $arg2 The id of the current score weapon
//
// @return int The updated score weapon id
//
const updateScoreWeapon [

  weaponId = $arg1;
  currentScoreWeaponId = $arg2;
  updatedScoreWeaponId = $currentScoreWeaponId;

  if (&& (!= $weaponId $KNIFE) (!= $weaponId $GRENADES))[

    if (= $currentScoreWeaponId $KNIFE) [

      if (= $weaponId $AKIMBO) [
        updatedScoreWeaponId = $PISTOL;
      ][
        updatedScoreWeaponId = $weaponId;
      ]

      //echo (concat (c 1) "Knife only" (c 3) "mode aborted!" (c 9) "But you can still finish with" (c 1) (getWeaponName $scoreWeapon))
    ][
      if (&& (= $scoreWeapon $PISTOL) (&& (!= $weaponId $PISTOL) (!= $weaponId $AKIMBO)))[
        updatedScoreWeaponId = $weaponId;
        //echo (concat (c 1) "Pistol only" (c 3) "mode aborted!" (c 9) "But you can still finish with" (c 1) (getWeaponName $scoreWeapon))
      ]
    ]

  ]

  return $updatedScoreWeaponId;
]

//
// Returns a comma separated string of weapons with which the player didn't score on a map.
// Returns an empty string when the map was finished with all weapons.
//
// @param String $arg1 The map name
//
// @return String The missing weapons string
//
const getMissingWeaponsString [

  mapName = $arg1;
  missingWeaponsString = "";
  isFirstEntry = 1;

  looplist $acGemaModeWeaponIds weaponId [

    recordTime = (loadMapRecord $arg1 $weaponId);

    // If there is no record for the map with that weapon
    if (! $recordTime)[

      if ($isFirstEntry)[
        isFirstEntry = 0;
      ][
        missingWeaponsString = (concatword $missingWeaponsString ", ");
      ]

      missingWeaponsString = (concatword $missingWeaponsString (getWeaponName $weaponId));
    ]

  ]

  return $missingWeaponsString;

]


//
// Returns the weapon id of the best map record.
//
// @param String $arg1 The map name
//
// @return int The weapon id of the best map record
//
const getBestMapRecordWeaponId [

  mapName = $arg1;
  bestMapRecordWeaponId = -1;
  bestMapRecordTime = 0;

  looplist $acGemaModeWeaponIds weaponId [

    recordTime = (loadMapRecord $mapName $weaponId);

    if (&& $recordTime (|| (! $bestMapRecordTime) (> $bestMapRecordTime $recordTime))) [
      bestMapRecordWeaponId = $weaponId;
      bestMapRecordTime = $recordTime;
    ]

  ]

  return $bestMapRecordWeaponId;

]
