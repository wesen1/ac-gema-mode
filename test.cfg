//
// @author wesen
// @copyright 2020 wesen <wesen-ac@web.de>
//

// Add tests (later)
const testTimeFormats [
  timeIntervalArray = (createTimeIntervalArray 612534);
  echo (generateTimeStringFromTimeInterval $timeIntervalArray $colorsRecordTime "-%02i\-%02s\-%03v \%03i %05i %T+");
  echo (generateTimeStringFromTimeInterval $timeIntervalArray $colorsRecordTime "-%02i- %02s- %03v-");
  echo (generateTimeStringFromTimeInterval $timeIntervalArray $colorsRecordTime "%02i*1 %02s*1 %03v*1");
  echo (generateTimeStringFromTimeInterval $timeIntervalArray $colorsRecordTime "--%02i+1 %02s+1 and %03v+1");
]


const testArrayRemove [
  echo (array_remove [a b c] 2);
]

const testTimeColors [
  echo (concatword (c $arg1) 10 (c $arg2) " minutes " (c $arg3) and (c $arg1) " 41 " (c $arg2) seconds);
]


const showAllColors [

  allColorsString = "";
  parsestring "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890" colorId [
    allColorsString = (concatword $allColorsString (c $colorId) " " $colorId);
  ]

  echo $allColorsString;
]


fontSpecialCharacterWidths = [];
addFontTypeCharacterWidthList fontSpecialCharacterWidths;


function testGenerateOutputLines [

  exampleOutputLines = [
    %1 This is a testreallylongwordthatistoolongformetohandle
    %2 if this works
    %3 correctly
  ]

  exampleOutputLines = (format $exampleOutputLines (c 1) (c 2) (c 3));

  // Expected: This is a | test if this | works | correctly

  outputLines = (generateOutputLines $exampleOutputLines 500 "  " $__fontsetting);
  ulooplist $outputLines outputLine [
    echo (strreplace $outputLine $TEMPORARY_WHITESPACE " ");
  ]

]
