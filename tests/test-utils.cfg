//
// @author wesen
// @copyright 2020 wesen <wesen-ac@web.de>
//

testResultString = "";
numberOfFailedTests = 0;
failedTestResults = [];

acunit_currentTestName = ""

//
// Asserts that two values are equal.
//
// @param mixed $arg1 The first value
// @param mixed $arg2 The second value
//
const assertEquals [

  testMethodName = $arg1;
  testCaseName = $arg2;
  realValue = $arg3;
  expectedValue = $arg4;

  if (= $expectedValue $realValue) [
    testResultString = (concatword $testResultString ".");
  ][
    testResultString = (concatword $testResultString "F");
    addFailedTestResult (concatword "Failed asserting that '" $realValue "' equals expected '" $expectedValue "' (" $testMethodName "->" $testCaseName ")");
  ]
]

//
// Asserts that two string values are equal.
//
// @param String $arg1 The first value
// @param String $arg2 The second value
//
const assertStringEquals [

  testMethodName = $arg1;
  testCaseName = $arg2;
  realValue = $arg3;
  expectedValue = $arg4;

  if (strcmp $expectedValue $realValue) [
    testResultString = (concatword $testResultString ".");
  ][
    testResultString = (concatword $testResultString "F");
    addFailedTestResult (concatword "Failed asserting that '" $realValue "' equals expected '" $expectedValue "' (" $testMethodName "->" $testCaseName ")");
  ]
]

//
// Adds a failed test result to the list of failed test result.
//
// @param string $arg1 The failed test result message
//
const addFailedTestResult [
  add2list failedTestResults (concatword $arg1 "~");
]

const printTestResults [
  echo $testResultString;
  printFailedTestResults;
]

const printFailedTestResults [

  if (strlen $failedTestResults > 0) [
    printNextFailedTestResult 0 0;
  ]

]

//
// @param int $arg1 The current string position
// @param int $arg2 The current delimiter number
//
const printNextFailedTestResult [

  currentStringPosition = $arg1;
  currentDelimiterNumber = $arg2;
  nextDelimiterPosition = (strpos $failedTestResults "~" $currentDelimiterNumber);

  if (= $nextDelimiterPosition -1) [
    echo (substr $failedTestResults $currentStringPosition -1);
  ][
    echo (substr $failedTestResults $currentStringPosition $nextDelimiterPosition);
    printNextFailedTestResult (+ $nextDelimiterPosition 2) (+ $currentDelimiterNumber 1);
  ]

]

const clearTestResults [
  testResultString = "";
  numberOfFailedTests = 0;
  failedTestResults = [];
]
